(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    390804,       7300]
NotebookOptionsPosition[    380476,       7129]
NotebookOutlinePosition[    381052,       7150]
CellTagsIndexPosition[    381009,       7147]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"input", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"String", "StringIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["String", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"String length: \"", "IconizedLabel"], 
            "\[InvisibleSpace]", 
            TagBox["9892", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["10240", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    "T6782 898\n26T7A 345\n56856 92\n88J88 379\n8QQJ8 792\nQQQT8 607\n98998 \
912\n888T7 491\n7A6Q9 220\n6QJ23 746\nT5297 133\n44874 357\n84854 864\n8JQQ2 \
383\nJ2KT2 649\n84488 234\nJQ4QT 534\nJJAAA 855\n8J49Q 458\n5QK4A 474\n5535T \
504\nT3785 237\n28J88 315\n4544A 680\n7T773 731\nKJKKK 190\n5Q5QK 249\n6664T \
747\nQTQQT 164\nATTAA 290\n95752 486\nJ3JAA 324\nK9K9J 204\n99959 867\nK4KKK \
980\nA937J 37\n654A9 700\n7553K 352\n8333K 361\nATJT8 771\n26226 940\nTTJ7Q \
834\nQQ33J 117\n62J57 890\nJ3A4A 124\nT4JT4 677\n93528 31\nTJA2J 509\nQ222A \
126\n52T67 177\n3J9TT 629\n33QQ3 471\n22232 9\n82279 283\n3A3AJ 583\n7343T \
829\n93338 836\nT588Q 70\n88K85 593\n55353 926\nQ3749 295\nT6JAK 586\n9AA3J \
183\n55565 342\n8K4Q8 910\nAA4A4 907\n78T2A 112\n4J66K 263\nTKJTT 386\n66Q6Q \
131\n26266 187\n23AQ3 600\n95K3Q 279\n32522 684\n8Q8Q7 62\nKKAKK 579\nQJ885 \
899\n66J2K 396\n555J5 592\n88TJ6 767\n352K2 94\nJ6488 634\n5A32J 943\nAAAKA \
673\nJ8AAA 667\n2K5JK 768\nQ4578 294\n4447K 227\nQQQQ7 808\nJJ333 176\n49586 \
515\n622T7 622\n94359 140\n8QJ2A 239\nQ69JT 939\nA75T9 425\nJKA93 887\nAA7AA \
157\nTTTJ5 122\nJ2J3J 118\n3J333 681\n3769A 429\nA2K92 123\n53Q8K 257\nA83K4 \
905\n2935K 543\n66466 421\n34394 963\nQQ433 520\nKTKKK 83\n66677 346\nQ83JQ \
334\n6AT54 79\nK4949 442\n37374 627\n73777 571\nJQKKJ 648\n42242 226\nKK888 \
319\n5K6Q2 971\nAA3JA 51\n4AK87 78\n3J343 840\nK3333 25\n33484 401\n9J866 565\
\nQ399Q 116\n2K597 742\n66A53 793\nAQQAQ 779\nQ3QJJ 470\n75496 4\n8JJT3 775\n\
99JKJ 437\n22J9J 60\n39AAT 424\n3J43J 507\n33TJ9 414\n99395 209\nA984Q 821\n\
A88J8 757\nT3A68 432\n36666 646\nKKKAA 175\nK9TTK 392\n33KK5 308\nKK4K4 675\n\
64443 370\nTQJ9Q 645\nQT999 669\nJ5T88 789\n89TJ4 245\nT436T 605\n6T464 36\n\
JQQ3Q 11\n68666 423\nKKJKT 785\nT4K3A 847\n6T6JT 915\n8Q756 163\n9AAA2 343\n\
9AJK8 556\n3JJ69 154\n7K7K3 316\n6737Q 641\n88J7J 975\n5J445 270\nKATJT 659\n\
6J866 717\n989T9 529\n2897K 321\n4A2T5 984\n7AA99 485\nJK222 397\n75468 282\n\
QT3J3 91\n3K777 532\n6Q566 460\n2KK75 339\n55258 766\n88558 46\n34J34 419\n\
T42A8 624\n6JA9K 950\nA8646 135\n66696 66\n37Q7Q 612\nKJAK6 753\n94999 306\n\
2JJJJ 765\n6JQ3A 459\nK8693 871\n477K7 26\n4T6T8 544\n44JK4 720\n5K5K9 372\n\
KQ66Q 590\n8A294 57\nJJJJJ 440\n88878 18\nJ9649 389\n77677 698\n9K69J 145\n\
2QT2K 75\n77577 22\nAQ4KA 422\n97477 332\n33933 882\n63646 293\n53A3A 763\n\
4K93K 928\nKKK37 994\nTA259 173\nK896A 93\n6Q666 438\nJ8477 674\nAJAQQ 531\n\
2JJ2J 726\n5KJT5 672\nA58A2 481\nJJAJT 754\n96444 179\n687A5 528\nTA48J 618\n\
7Q7Q7 537\nT4A44 23\n473Q6 988\nKQ467 64\n5T555 938\n67T33 444\nKAK99 591\n\
A6K78 160\n23Q7A 878\nTA5AT 292\n2T6Q5 559\n77979 222\n9AAJA 284\nTK47T 166\n\
694T2 679\nAAA23 838\n88KJK 170\nQJQ2Q 777\n84486 178\n535JQ 411\nJ547T 595\n\
37773 602\n777JQ 188\n48989 825\n4944K 492\nJ8959 375\n72Q5A 908\nQ2AAT 280\n\
Q3666 119\n48J24 238\n999JA 865\nKK9KK 831\n6Q3JT 909\n3A773 50\n38466 461\n\
37A25 300\n95555 307\n7Q228 557\nKQ66K 525\n8744K 727\nJ9JQ9 475\nA5AKA 148\n\
A7KJT 309\nTT794 539\n53339 762\nQ9999 6\nA4AT4 993\n888AA 790\n6666A 480\n\
88Q63 274\n99J92 869\nJ8988 884\n8K68J 839\n7QA72 498\n84697 581\n3QK3J 289\n\
59J8A 692\nQ5J5Q 761\nJ777K 930\nT552K 251\nTAT26 715\n6J32T 380\n74K28 523\n\
22279 104\n8TKT2 393\n68J67 391\n55458 340\n5TK47 395\n822J8 893\nT9388 902\n\
8TQ3Q 252\n3T549 811\n88883 702\n55J2K 81\n4QTT4 138\n69669 272\nKTKTK 576\n\
T6668 822\n7J777 736\n9ATJT 892\nQ5QQQ 125\n66T9T 519\n4T244 589\n77747 174\n\
3J698 837\n39K28 665\nQA459 456\n22342 545\nJ8478 489\nQ2962 468\nQAAAA 958\n\
K8T87 260\nJ4KK7 706\nJ5J95 695\n47445 724\nK268T 967\n33299 652\nKKKK2 664\n\
K9JKA 711\n85926 435\nJ7K6J 511\n3667J 791\n229QA 633\n998K7 642\n8QQ77 774\n\
6347A 497\n46526 327\nQK327 750\nKAQ25 927\n27T34 134\nT633T 208\nKKQK7 810\n\
223J2 900\n5KKJ5 842\n99533 521\nA5Q85 553\n54455 570\nJA946 582\n69Q66 690\n\
99977 701\n282Q8 428\n4AA42 10\n75977 328\n99T99 948\nJ5353 546\nQT95K 285\n\
KKK3K 896\n9696J 264\nT8275 436\n45J55 80\n69AAA 430\n27J4J 202\n6A888 404\n\
TQ5K8 819\n55858 113\nT828T 933\nT8888 12\n3KKKT 703\n657J6 291\n8699J 172\n\
9J99T 705\nA22A2 229\n32263 314\n8QQQQ 101\n2J222 354\n73373 107\n99398 946\n\
2AA2J 885\nT66J6 184\n3K8K8 903\nKJJKK 611\n22226 781\n9A2J9 191\nAK26J 964\n\
8KK2Q 317\n82898 883\nT9TTT 195\n584JT 743\n4AA45 61\n93J79 100\n3QJAK 241\n\
T74AQ 304\n4Q2QQ 548\nKKJ27 330\nA9TKK 39\n6J447 303\n592A6 449\nK9928 65\n\
9A94K 193\n8T646 431\nQ46K3 20\nK5777 833\nQ9756 30\n33838 638\n65686 298\n\
A9JAJ 599\n85555 784\n6TAA4 286\n3QQ89 446\n3JT37 463\n8AK5Q 230\n7JAAQ 580\n\
754TQ 74\n9AQQ4 729\n2933J 678\n62757 575\n29929 619\nA3AAA 216\nQ557Q 691\n\
A7Q8T 983\n3TJQT 668\nA3KJA 503\n7AA77 881\n88288 995\n7QJ3J 770\n5KKJK 265\n\
444J4 998\n82J87 89\nT3T3J 63\n2QQ76 510\n5QQ25 132\nKKKT5 441\nQ822Q 954\n\
84858 788\n37627 873\n22959 426\nK6KKJ 454\n4J844 359\n67JQ7 266\nTQ7T2 206\n\
5QT2J 854\nKK985 42\n3562T 877\n44343 999\n5J595 859\n37888 657\nJ65AK 801\n\
77276 382\n22A22 207\nQQ4K3 253\n9K2K4 161\n888Q8 863\n75J77 518\nK2K2K 150\n\
2JT62 398\nJ3993 719\nAA88A 813\n9499T 211\nA568Q 98\n6KQ6J 962\nQAKA8 367\n\
998A9 561\nJ2357 196\nA797T 663\n6J9J6 505\n2T5T2 759\nK6464 381\n76677 373\n\
4K92J 33\n5A8JK 447\n8QQ88 660\n3298A 325\n37333 802\nJTQQT 7\nQQQ3A 820\n\
J5935 506\nK4334 2\nKA749 40\n94QQ9 415\n537KK 225\n25255 913\n835J9 601\n\
55TTT 647\n92J92 710\n66A6A 312\nA8TT8 914\n4KJKK 271\nT3242 835\n3K636 623\n\
93T5A 365\nJ4739 816\n244A5 465\nA9TT5 560\n2JAA9 224\nTTT7T 356\nAQQAA 656\n\
QT5Q5 879\n7AA7J 632\n36344 127\nK5T89 243\n797A9 562\n66363 52\n68585 598\n\
KQ8A9 608\n999K2 21\n52253 151\nA5595 262\nKTTTT 366\n2922T 1000\n25328 815\n\
3T7T7 806\nQ2Q39 895\n3J432 786\nJA228 782\nAJJ99 621\n8AAQQ 809\n97QAT 143\n\
456J8 15\nAAJ2A 165\nJ55J5 281\nK6945 322\n22A2J 799\n77AAA 666\nQ6J66 168\n\
7QTJ5 363\nQ38T2 709\nAKT86 936\nQQQQK 585\nJA4J4 130\nAJA73 796\n88QQQ 828\n\
QQ2Q2 390\nKK77K 301\nA5TQ9 805\n96677 477\nJ7495 628\n24222 807\n8QQ83 992\n\
222K6 861\n949J5 473\n59873 555\n9K584 564\nAAQ7Q 989\n62J2K 445\n4732A 420\n\
2JT9K 136\nTT989 277\nJJ999 549\nQ9T6K 513\n36J6A 97\nA3J32 986\n8A7TJ 682\n\
T2784 59\nKJAAK 110\n8KJ88 919\nAKK77 256\n2J876 713\nK3TQ7 115\n8Q6AT 973\n\
45666 19\n33335 400\nJ43K4 851\nA22A9 974\n8Q867 574\n993KA 185\n9K8Q4 464\n\
5AAAA 949\n27JJ5 686\n3TTT3 606\nT4444 533\nK8838 830\n75682 960\nJ89JT 129\n\
45A5A 886\nKKK6T 416\nAJA6A 626\nAAJKA 182\nAA2A8 73\n7JK88 640\nJJ222 462\n\
4A455 49\n7JAKQ 812\nAAAA9 387\n777T7 769\n37K2A 348\nQTJ77 355\nKQQKA 500\n\
QQQ9Q 350\n65666 111\nT7TT7 407\n333TJ 214\n78876 8\n8Q478 409\n8K3AT 934\n\
6A583 814\nJTJAA 826\n3A373 278\nJ4J44 171\n9AAA3 374\n32J32 199\n76TTA 858\n\
27222 305\n862K6 369\nQJKAA 568\nJK94J 524\nQ6QQ6 852\n2TQ22 987\nJ6AJ7 385\n\
73A6T 106\nQAKQT 925\n2424T 737\nT7ATA 620\nT8A47 613\nJ2858 636\nK7373 484\n\
7QK65 716\nK8QKK 981\n52454 443\nAAAAJ 738\n99J99 69\n6AQJ8 439\n774J9 798\n\
66JJ6 210\nTTQTQ 35\n7QJ97 694\nQJQQJ 918\n9K999 573\nQ7TT7 68\n46887 704\n\
T6379 661\n34888 326\n9A999 916\n6466J 849\n666J6 479\nQKKKK 247\n46K48 336\n\
J6729 467\nA22A6 269\n6KQKK 584\n68J86 961\n8KK87 670\n52656 542\nQ4AJ3 394\n\
79KJK 77\nQ8965 139\n44474 240\nQJQQQ 434\nAQ449 921\n57A9J 996\nJ5835 817\n\
QQKK3 818\n3943J 13\n4T7A5 956\n44464 517\n5A55J 48\n2J254 722\n9JAT5 487\n\
Q4757 856\n5Q55A 749\nATKJ5 82\nJ8588 142\n646TQ 783\n38J39 922\n26J77 823\n\
2TT4T 162\n6666K 137\nQQQ83 758\n32KJT 733\n4J9K8 353\nKQJT7 501\n6T6TK 982\n\
Q42K9 147\n8734Q 538\nKKA67 794\nJQKKA 804\nQQ555 596\n4JJ45 32\n28383 904\n\
T5Q45 38\n5T5TJ 221\nQ3K9A 29\n99649 1\n94247 146\n4Q444 362\n5637T 734\n\
577TT 735\nTT244 364\n56QQQ 149\nK2AQ3 144\n9J959 493\n66Q44 405\n888K8 654\n\
6J624 635\n9QJKA 569\nK8K5K 120\n24443 344\n6666T 197\n6T747 740\n54523 935\n\
A96Q2 302\nAJJJA 697\n2T476 90\n55444 403\nQJ22Q 85\nKK9KJ 254\n4938T 156\n\
5JT8J 741\nQ55K3 527\n627JK 894\nT6245 917\n44864 410\n77QJ3 587\n823A4 457\n\
32323 259\n9T94T 609\n33J8K 158\n7AK4K 201\n44774 957\n4Q45T 180\nJA82K 978\n\
333J5 872\nJ8948 267\n99933 433\n4T7JJ 563\n85534 862\nK7K8K 24\nJTTKK 824\n\
TQ8TT 803\n62677 797\nQQATT 965\nQQ668 870\n88724 551\nT3T43 17\n99749 275\n\
7T6J2 977\n67J77 203\n6T789 167\n22J28 639\n26744 850\nQQQ6Q 47\nQA72T 554\n\
3AT9T 897\nQJTQ2 261\n696JQ 631\n9KKQJ 490\n469T8 72\nQAT42 951\nAJ2AK 413\n\
8AQ2T 297\nAJ482 255\nQQQKK 931\nAJA7A 874\n34532 368\n74A44 945\n88989 418\n\
A2AAA 219\n39999 857\nJ7774 687\nQ9925 630\n9JQ9Q 578\n8AA38 689\n8QA2A 427\n\
Q6Q99 800\nTTTTJ 399\nAA822 614\nATT47 676\nK2AAA 514\n7J696 338\nJ3J87 88\n\
55547 728\n5A338 86\n838T6 250\n87QAK 970\n795K7 723\n7QTJ6 152\n5A9KQ 494\n\
KA4TK 650\nQ2222 604\nK5953 452\nK2282 552\n4K586 760\nK4444 868\n724AA 516\n\
52224 55\n35Q33 58\n46644 331\nT8325 888\n9K229 388\n779TT 920\n97279 95\n\
JJ374 450\n8JJJJ 610\n84497 217\n8QK4J 233\nKQ6T6 360\n6637Q 53\nKK7QJ 683\n\
4828A 215\n5TT55 990\nJ3768 536\nATKTK 846\n5T9K4 780\n2T8AT 502\n7T776 712\n\
KQ93Q 114\n2474J 483\nQQQ46 408\nJ5T82 718\n834A9 688\nJT977 615\n69663 296\n\
4A638 880\nQQQA7 27\n2K22K 377\n29379 972\n244J4 242\nK8KKK 56\nKTQKJ 891\n\
87K5J 730\n887AA 699\n9QJQA 725\n6J655 929\n8692A 844\n2QQQQ 194\nTJ79Q 969\n\
JATA9 128\n8448J 103\n9399J 953\n98J77 371\nTT3J5 192\nJ3655 924\n6993K 616\n\
J8788 979\nK9KK3 756\n57AQ4 671\n88KQ7 955\n6AAA6 843\n9494J 105\n6A2QQ 942\n\
T222T 87\nJ9JA5 244\nAKA4A 198\nQ4635 558\n2332T 889\nAKQQ5 827\n97QQQ 337\n\
JT575 603\n36336 478\n4A43T 653\n5QQ38 349\n97777 776\nTQ6TT 541\n57775 258\n\
68KKK 469\n92224 121\n4853Q 476\n2Q695 273\n2J626 732\n6A328 246\n5QT27 959\n\
KJJ77 658\n4K6KK 310\nJAK66 28\nQQK4K 16\nK4923 752\n57555 482\n46T5T 550\n\
333Q3 496\n2Q93J 755\n778J3 751\nK77KJ 276\n76A96 947\nQTT7T 335\n4T9K6 997\n\
26926 512\n66464 522\n59997 787\nK462A 508\nK4K7K 333\nQ3Q3Q 707\nA3TKK 772\n\
7T7J7 44\nTAK54 455\n44JKQ 287\nTQK49 748\n37335 577\nQ743J 200\nQ4A45 236\n\
KJ62K 288\n544K5 76\nTTTJJ 693\n89999 96\nK8JKK 351\n5JAT8 778\nTAAJT 67\n\
39339 911\n997K6 329\n5JK88 876\n338QQ 530\n88889 937\n884T8 526\n382QA 320\n\
86Q35 764\nKQ38A 412\nAA7A8 358\n22Q2K 637\nA22JK 248\n59855 906\n33AJ3 347\n\
42T2Q 108\nAQ2T6 99\n8KATJ 651\n9JQTT 832\n84847 451\n52K8K 453\nK6553 54\n\
87778 499\nTAAJA 223\n38298 643\n5557Q 841\n9K6K9 448\n77J73 617\n555K5 976\n\
A38T4 968\n3333A 472\n5KJ74 866\n7JJ8K 708\nJ55Q5 714\n58KA4 795\nAAAA4 488\n\
Q8QQ7 45\n58A55 311\n27T7T 3\n2J4KA 43\nTT3T9 159\n475K6 109\n48844 323\n\
4T2T2 186\nQ7A7J 218\nJTJA6 744\nJ96J4 721\n8TT88 41\nQ5T96 417\nQTA6T 213\n\
68A33 169\nJ3TT8 34\n44JK8 14\n29983 540\n3666J 845\n436J2 685\n88A88 597\n\
889J9 313\n77754 848\n2TA99 406\n5KK5K 535\n3KJ75 547\n67666 662\n9T634 231\n\
QTQQQ 299\nJ993T 745\n87Q98 155\nAAAKQ 376\n36Q43 696\n67K67 952\n25Q47 739\n\
44424 228\nK22JQ 941\n5434Q 232\n8AA6Q 5\n58J55 625\n37535 153\n66868 572\n\
87788 384\nJ5993 860\nK42K4 402\n59Q7T 944\nJ2475 495\nKKKK7 773\n9K5Q2 341\n\
9AQAQ 594\nT5974 181\n42442 901\nT6TTT 932\n25895 268\n44484 212\n88J63 588\n\
22777 102\nQ7K77 991\nQK9K9 235\nJ4544 205\n7K523 985\nT4246 566\n9TQ3A 466\n\
884JT 644\n59995 84\n7772J 853\nJJ882 318\n25522 923\nTTT9J 189\n23333 378\n\
58J85 141\n7K45K 567\nJJ777 71\n74A47 875\n2J848 655\n93K65 966",
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.9109150630552807`*^9, 3.91091507468439*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"81ed5eb8-4d72-4c3a-b9a1-64fb14d9a605"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hands", " ", "=", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<card\>\"", "->", " ", 
        RowBox[{"StringTake", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<bid\>\"", "->", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCases", "[", 
            RowBox[{"#", ",", 
             RowBox[{
             "RegularExpression", "[", "\"\<\\\\s\\\\d+$\>\"", "]"}]}], "]"}],
            " ", "//", " ", "First"}], " ", "//", " ", "ToExpression"}], 
         ")"}]}]}], "|>"}], " ", "&"}], " ", "/@", " ", 
    RowBox[{"StringSplit", "[", 
     RowBox[{"input", ",", "\"\<\\n\>\""}], "]"}]}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.910915079605102*^9, 3.9109153778327103`*^9}, 
   3.9109154229703217`*^9, {3.910915547070065*^9, 3.910915548276805*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"0cd907aa-359c-4001-acd5-6d2c8b24a1f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hands", " ", "//", " ", "Short"}]], "Input",
 CellChangeTimes->{{3.910915426331003*^9, 3.910915430057699*^9}, {
  3.910915551397991*^9, 3.910915554028392*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"67fc6436-edc2-4e8e-b7c6-2c64e85681ad"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"T6782\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "898"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"26T7A\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "345"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftSkeleton]", "996", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2J848\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "655"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"93K65\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "966"}]}], "\[RightAssociation]"}]}], 
   "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.910915430644718*^9, 3.910915557156288*^9, 3.9109172059193287`*^9, 
   3.910918369881277*^9, 3.910929300822529*^9, 3.910929362468526*^9, 
   3.910929592128146*^9, {3.9109301072749434`*^9, 3.910930131879825*^9}, 
   3.9109312325293293`*^9, 3.9109314178466473`*^9, 3.910931778720686*^9, 
   3.9109325382713203`*^9, 3.910932610301343*^9, 3.910932997078833*^9, {
   3.910933030326129*^9, 3.91093306968338*^9}, {3.910956509686241*^9, 
   3.910956536049431*^9}, 3.91095666630441*^9, 3.9109587564944344`*^9, 
   3.910958934567492*^9, 3.910959045642332*^9, 3.9109682571523237`*^9, 
   3.910968658704124*^9, {3.910968748981441*^9, 3.910968786791643*^9}},
 CellLabel->
  "Out[174]//Short=",ExpressionUUID->"ee14045d-9b66-46f7-b749-b9f5f299553f"]
}, Open  ]],

Cell[TextData[{
 "Now we apply 2 layer of parse, first layer will grouping those hands to 7 \
difference groups base on what kind of cards they have. Second layer will \
sort them by compare each character. Seem easy, let \[OpenCurlyQuote]s see. \
We have at least 3 functions relative to \[OpenCurlyDoubleQuote]Grouping\
\[CloseCurlyDoubleQuote] a collections of element here. SplitBy, GroupBy, \
GatherBy \|01f613. If I checked the document correctly, they nearly the same \
about input, the difference is  SplitBy only apply compare to adj elements, \
GroupBy produce the result as a association with the key as f[x] (with f is \
conditional function), values is group of results. Gather will only produce \
the list of  group result.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
RIwbZsm8hdZCsGqQkS6p4SIyhYVaPFFQnzDjQ+IzlqTxkhFDseVkd4yic4Dg
60y5Kxos3LGSp2LoZuJObkyCiDS5Fk7x9UmZTOeirR0OPzdaqeSKkYAYpui+
zOnewvqktGdVGk0dJC/BStNcPNFlVmUHycEJA3GLPXSuCH1SWsVI1c/MIVj5
KkaL7xRt50YfSboC0dmBRIKrRkIxn4E3lV5cqSz4rMQTW1zRhVjR40/qbeHU
OBDk/aDCyK2x2Zd2DVDBkR38YSrGYHSiGeuTXzLcPBdmkIkydOe6X7qb4Dwn
3KKp3D3Vvzl79Z0BdrkPJVq3Dc23bfNe/z/+snBUyWgbUBHM8iDS1tqW5988
s762emX5/JXzy6vnPgkckTdkzy/OnL9j4s3fWfl0olPLDkyt37FDxU5ebv79
xTWXTMUu3CrPufgqP8Iq5dBrXzCxXfjy4tkvTr/5gvuD5Q+7ZLllEnpN0B5o
/RODoh3NIN63T/Ps27dBfbGb/tSipXR37tR7r111SAm0xsvu3Q2ywc+uRo+h
2dAg4aqk5siNS39QtdfVaZQtVt/Ze+tr68zUnrOnXvGtXg6a4E6IJzGNqN23
/N1fbsyaiy07lefUjeTMnUp75OoC6psuK+DGh4bO5Q/SfnZskn+ON6NBUJ/s
ZaZOHA+E0KwfpkPBkzWGNgfiDleIYoNM+dzjA8RgYhwvD8I0HYsEmR4KtyXd
kVJpdobj7ESYwHBLkZqtJH1SJjPMLC1OZcmkCn0/OxOHGcE1S/ldRU2QKZOY
rTM0k1EQBMJyQ15Fmv5pOsRMtwm4pzzDWotztrA+gWwnRqlImGZim/VZu+yh
ueT4WLnF6uK592dcBsGFX1LkqxjSATeqFdM+96TD0MJIkbTgckd0OWbNLPdS
KkbirQm7n3013hi5PPqktGcpiaMeN9cPMku5j6ZmVJHHmXlqaGqP3WI0zVCF
9UnJFQO9jtoRmo8xpTnjSIxuzVMx4OlTdvt0Yi5YKP1BIsWAc46dwMUmwz2U
Pbg661no/Ibm76hepF/jDx0BqvuCH9hqN//SntF5vl+F4ckub4wZjoL1yS+W
jEXd+Qu2I3FSxhpu7h60MR9alo1bjY1ZTFVCILuMekC45cj27WtBC48gBwi7
NppcaLpN9vonEAr+hfhBDiFhsG0bsy1gxgL7OV8KkgdJRfIJYqupaQOkSe9Q
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
Ge25YobdXrxLuABIz2wr/j9aWh4w
     "], {{0, 227.97150356205475`}, {551.931008623922, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96.012, 96.012},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{551.181008623922, Automatic},
   ImageSizeRaw->{551.931008623922, 227.97150356205475`},
   PlotRange->{{0, 551.931008623922}, {0, 227.97150356205475`}}]], "Input",
  ExpressionUUID->"bdcb5996-c67a-4918-ac74-2c380a7cdb03"]
}], "Text",
 CellChangeTimes->{{3.910915469419963*^9, 3.910915481242742*^9}, {
   3.910915512651112*^9, 3.910915593756836*^9}, {3.910916147296371*^9, 
   3.91091638683014*^9}, 3.910927835491918*^9, {3.910929109583686*^9, 
   3.910929122127821*^9}, {3.910968170663843*^9, 
   3.9109681720597057`*^9}},ExpressionUUID->"c2135ccd-0e31-40c1-8b2f-\
9081f73c6aed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"handGroupingFunction", "[", "hand_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"hand", "[", "\"\<card\>\"", "]"}], ",", "\"\<\>\""}], 
       "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"7", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Counts", "[", "c", "]"}], " ", "//", " ", "Values"}], 
             ")"}], " ", "==", " ", 
            RowBox[{"{", "5", "}"}]}]},
          {"6", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Counts", "[", "c", "]"}], " ", "//", " ", "Sort"}], 
              " ", "//", " ", "Values"}], ")"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}]},
          {"5", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Counts", "[", "c", "]"}], " ", "//", "Sort"}], " ", "//",
               "Values"}], ")"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}]},
          {"4", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Counts", "[", "c", "]"}], "//", "Sort"}], " ", "//", 
              "Values"}], ")"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "3"}], "}"}]}]},
          {"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Counts", "[", "c", "]"}], "//", "Sort"}], " ", "//", 
              "Values"}], ")"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "2"}], "}"}]}]},
          {"2", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Counts", "[", "c", "]"}], " ", "//", " ", "Sort"}], 
              " ", "//", " ", "Values"}], ")"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}]}]},
          {"1", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Counts", "[", "c", "]"}], "//", "Sort"}], "//", 
              "Values"}], ")"}], " ", "==", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True]}], " ", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9109281377516527`*^9, 3.910928315106038*^9}, {
   3.9109283944293633`*^9, 3.9109284578456287`*^9}, {3.910928563575371*^9, 
   3.910928790571465*^9}, 3.910928946395172*^9, {3.910928979475872*^9, 
   3.910928998631454*^9}, {3.910929169197679*^9, 3.910929211906803*^9}, {
   3.9109293444634523`*^9, 3.91092936027941*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"7ac3745e-bda5-43c7-bf73-98c747fa2d58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"handsGroup", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"GroupBy", "[", 
      RowBox[{"hands", ",", 
       RowBox[{"hand", " ", "\[Function]", 
        RowBox[{"handGroupingFunction", "[", "hand", "]"}]}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Keys", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9109163886968603`*^9, 3.910916436615841*^9}, {
   3.910916883824443*^9, 3.9109169906349792`*^9}, {3.910917070606203*^9, 
   3.9109171328863287`*^9}, {3.910918332396369*^9, 3.910918340963847*^9}, {
   3.910928805347666*^9, 3.910928810859058*^9}, {3.910928919543056*^9, 
   3.910928932117238*^9}, 3.9109292633338614`*^9, {3.910930012991898*^9, 
   3.910930023303276*^9}, {3.910930066882187*^9, 3.9109300719842443`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"57fd30a1-2e90-476e-ac54-6022ead23450"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsGroup", " ", "//", "Keys"}]], "Input",
 CellChangeTimes->{{3.910917149247658*^9, 3.910917177998592*^9}, {
   3.910918336181344*^9, 3.910918343107318*^9}, 3.910929265139876*^9, 
   3.910930048402512*^9, {3.9109300860730124`*^9, 3.910930088592114*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"120fb7e4-e5ed-4db5-9c3a-971a7f61bc19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.910917153664637*^9, 3.9109172063419333`*^9}, 
   3.9109183701025257`*^9, 3.910928820329316*^9, 3.910928952235306*^9, 
   3.910929002845788*^9, 3.910929225249682*^9, 3.9109293010669518`*^9, 
   3.9109293628660603`*^9, 3.9109295924428596`*^9, {3.91093002577516*^9, 
   3.910930132200562*^9}, 3.910931232886877*^9, 3.91093141811686*^9, 
   3.910931779083412*^9, 3.910932538553418*^9, 3.910932610592695*^9, 
   3.910932997343561*^9, {3.910933030593615*^9, 3.910933069970907*^9}, {
   3.910956509950148*^9, 3.910956536689155*^9}, 3.9109566666071987`*^9, 
   3.910958756779907*^9, 3.91095893490591*^9, 3.9109590460827827`*^9, 
   3.910968257290428*^9, 3.910968658878707*^9, {3.910968749210513*^9, 
   3.910968786978065*^9}},
 CellLabel->
  "Out[177]=",ExpressionUUID->"00058805-319f-4460-aa5e-1a933c708032"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<number of hands\>\"", "->", " ", "#1"}], ",", 
       RowBox[{"\"\<type\>\"", "->", " ", "#2"}]}], "|>"}], " ", "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"handsGroup", "[", "#", "]"}], "]"}], "&"}], " ", "/@", "  ", 
       RowBox[{"Keys", "[", "handsGroup", "]"}]}], ",", 
      RowBox[{"Keys", "[", "handsGroup", "]"}]}], "}"}]}], " ", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910917212229711*^9, 3.910917269328533*^9}, 
   3.910917513679325*^9, {3.910917606407155*^9, 3.910917679877067*^9}, {
   3.910917722779158*^9, 3.9109180775748167`*^9}, {3.9109183471592627`*^9, 
   3.910918352468491*^9}, {3.910928830879312*^9, 3.9109288812934113`*^9}, {
   3.9109292693905697`*^9, 3.910929274141594*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"e002fbbc-75f8-406d-8550-62567e23a009"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"number of hands\"\>", "\[Rule]", "214"}], ",", 
     RowBox[{"\<\"type\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"number of hands\"\>", "\[Rule]", "260"}], ",", 
     RowBox[{"\<\"type\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"number of hands\"\>", "\[Rule]", "160"}], ",", 
     RowBox[{"\<\"type\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"number of hands\"\>", "\[Rule]", "175"}], ",", 
     RowBox[{"\<\"type\"\>", "\[Rule]", "4"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"number of hands\"\>", "\[Rule]", "89"}], ",", 
     RowBox[{"\<\"type\"\>", "\[Rule]", "5"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"number of hands\"\>", "\[Rule]", "101"}], ",", 
     RowBox[{"\<\"type\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"number of hands\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"type\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.910918209480564*^9, 3.91091837023582*^9, {3.9109288323308163`*^9, 
   3.91092885466434*^9}, 3.910928954978281*^9, 3.9109290059064827`*^9, 
   3.9109292339083557`*^9, 3.9109293011447372`*^9, 3.91092936290849*^9, 
   3.9109295925502577`*^9, {3.910930107679579*^9, 3.910930132319124*^9}, 
   3.9109312330301456`*^9, 3.9109314182332*^9, 3.910931779209071*^9, 
   3.910932538633995*^9, 3.910932610674018*^9, 3.910932997404385*^9, {
   3.910933030692108*^9, 3.9109330700093813`*^9}, {3.91095651005079*^9, 
   3.910956536862702*^9}, 3.910956666704908*^9, 3.9109587569028673`*^9, 
   3.910958935036516*^9, 3.910959046200789*^9, 3.910968257349629*^9, 
   3.910968658959474*^9, {3.910968749313691*^9, 3.91096878706793*^9}},
 CellLabel->
  "Out[178]=",ExpressionUUID->"13fb6203-6bf6-4bb5-9a1c-c75714705512"]
}, Open  ]],

Cell["Now sort each group by character", "Text",
 CellChangeTimes->{{3.9109182581049833`*^9, 
  3.910918271625445*^9}},ExpressionUUID->"fc18a114-d20a-497c-ae36-\
2344ef7b01f5"],

Cell["\<\
Oh sorry, so we have a rule here, we not simply comparing by alphabet value \
of them\
\>", "Text",
 CellChangeTimes->{{3.9109188684807167`*^9, 
  3.910918910224091*^9}},ExpressionUUID->"68589c8d-5ec1-41cc-b1a2-\
0ac3a2cf66fe"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
hstD1H4o33zAl2qcWzDA32hOJzrWyMTi1DdyCQZoWhPp3KEakULMPXyS5P/C
CB4072Zx/k59MDbbUT75l/WIy7Q0bgriQ3mCQZRMVS2tQW5Lk/eOIGw90JS9
OkBnzZXgF3jojjuW1Y0txqeYiHqDyXFpuSjBsLvH4g9a0MYyD27KFgxPkJ3K
s5kkgDwgs07n4GMnpTPkDSSzFySYb8Hjc48UpCBRu0nHlqPAwZGZS2adnLty
RCp7bImcylka3i6o0w7T2xOo3Fcv7rOnEn1F3cMLRMgL8zyd42qTzcua+0gG
p9zJJH8qE4zJLitPMPA0CLg9SGfegnnBnFWnsvrmCgoGWiQskBHYGphKnAzk
n6TnRf5tlQp0Mr1LwjWmzVkfRwzJbww4TNkpjnneSt12epcEPqVOd08yFr/P
7I/oxzdW0p5FosZs6WA1TiXeF8oPYSAdCoAvohOwA1g//XVlRhgUyEmng+mG
F3ec5MvkT/+uXlYesj1rlwSXf1cgE3gkTF/l9Uz1Ycl0I3iVfITKyvYGoOmy
s7ILCIZOT+LbH+97iz5tQ+m8dD+1P6Iei9xZYlY8eQQD9ZP77D5ovdSWB9Ze
A07BwLI0Os/f53XmJEaynhdN/nsnokzSQhI7+1wkldJQdg5DeY+4TEvjoiAe
lBth0HmXLxHUjioAajxOm4uZ6XBZmqjJNGVnRaTddrb7oCDWY0GSGubU3gEM
Lfi7uOmOz9KkIzachGTimjMb5nAedZcUDDt7bFcfJAhvchmLwlmLprGiHIYn
yU5l2EwKonZrKEpSlOK2MimLnOxUO+i6zuyP6MYuPmQTCycF1XUbZjxpw/AG
xlVZdITo5gjoFFxup5H1vER9gcT9dYf6Jxh/ECDgaYXKE8tdNv2pQTjmtySI
epy+GdbGmVqFdACPP9bjCrcfBJsRIECAgFKAGNwktm2DfkVDIP+SIJ0mso7X
k57EQ5Nbfajak4VgMwIECBBQNBDDHG7rK3qJahtDIP/SIOoenqOPFbLTWAjY
RqtwUsdPC4LNCBAgQMDPEIDbC2LLOylgW0GwGQECBAgQIECAAAECBAgQIECA
AAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECA
AAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECthv+f0de
vRs=
    "], {{0, 64.49193850768654}, {524.1844769403825, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{548.9344769403825, Automatic},
  ImageSizeRaw->{524.1844769403825, 64.49193850768654},
  PlotRange->{{0, 524.1844769403825}, {0, 64.49193850768654}}]], "Text",
 CellChangeTimes->{{3.9109686178789387`*^9, 3.9109686252682743`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d5552292-31b2-43b5-af78-bc16a01bfb84"],

Cell["\<\
Another question rose here, what is the definition of bigger, equal and less \
than, how Sorting actually work . There is no official document to teach me \
about how to write a comparing function in Wolfram language . If I remember \
correctly, in Python, a custom comparing function will return  {-1, 0, 1} \
when compare 2 element. But in Wolfram, think is not like this. Base on this \
document.\
\>", "Text",
 CellChangeTimes->{{3.910921389873115*^9, 3.9109215446595592`*^9}, {
  3.910921583371716*^9, 3.91092158684437*^9}, {3.910925660901829*^9, 
  3.910925662261673*^9}, {3.9109293990684967`*^9, 
  3.9109294037327013`*^9}},ExpressionUUID->"b22c071f-5287-4edc-891d-\
bd789ee6216c"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvV1oI1ma99n7cbGwFOxNXfbFe9GXdWU62bgQnMVwQDDRY8rRBgcYHK93
yrFuHLs5b0abtXAxFskkynqzRe6mOnnHKBsjssZB1rgj+81smU7k6eyR6Rx5
t4ySNqksPHJi0NaYCspUVGcXAQLtOREhKUKKkOWv/Kr/r4smHQqdOPGc55zz
/M+X/sN//N8//Oi//cEPfvCf/gf2fx8qC//L3/6t8n+O/0/sj59q/+l/m9X+
5n9Nalf+ZvZv/vZ//o//Hbv4P/43P/jBf/jvf/AD/u8WAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACAi6R6QxQWSmdKwinqgpjdHXSLvZVVkoJA
xMyWc5KkG4UpQb1nnSl7EVjGjKCsNs4jKbu0TMls4VzSerNoVrPjRLpVO78U
L6g0ObVbknDZtC8i6VOzV1CImD6Zw78uLrBoXtGDHqdIMlNpnimNEzWG1n2N
UL34Cmx2Ck7ne2ey4StzIQAAAOdI81lp+ycfffbeX336/tSDqfyLZyfqOpoN
bar4i5gg+JVIjEZhRmDB6smDrWC35RSvEO3+uUSR5ygxWta2aWzWB77aOeb8
YrHWVLpUbv9l1x4axefnmO3vmcR4WS+tmdWzvu6rcZ7vq8R4npPGs9X2t07W
GDbKxr1y42yi5qI4ne9BYgAAwPeNZ5//+MMHP//D10d/dr580fjlza1fvjhJ
N+C8mPrwtUqMZi03IWgPTzGcG+y2LGNWeAMlxlCPO7ecXyz1FZl0Jca5c5ES
4/abJzHOh1fjPN9XibGdoWOnlRjvHpAYAADwPePod6X3prf/GNHyN/f/efun
6voPP/zsg5/9/uOtb72rf/yH3yTye3c+KX4w/eDnj3Z/IhvvJT99X/rsh1P/
8us/9ybBelUynytcVUQiCKOSfqfKo5mDgpJQuqt/9vPyqF4MhjlNq3xLl5NE
IKJ2Pa0k2hKDXb+tyyIlVJQXC25aDWOOCJdGRgSBTOZqTqO8mlYnKHsaGVNz
T9xEm9WsKOiP/LStNVWY9h7e7raYSJlyE0kQlnLmSegVnOdmZk6i7JMxJXWn
4ndytqkR3djMaZOieNmwWk59I6NNUCFBpCuZ1ERXYrCvp2clyrI8rmY3vYuN
wrSYXi9mZiVxLFWy7eqqLiUpHaXSXKZ40GtAPyzhT9QKj/KpWVkSKZ3OlK1W
VM6dxqOsNiGy1MSZtLnnK6/GRkadEMUkGfEYz9VYiR9VC0sKu0iSkrbiv1r1
hiTfLBrLiiRK2e2WtZXTxinP/6Se24rr4sNvdBRRCuVrzAVYMREySpWVWs8U
Es/zJLMxEaf03OO2Z7CYZCZXvJtWp1mZU3m56A/qWlXjusbdQxDoTKbUaOdh
YBBiPzezC4o4KggJKi+Z/sxQpFW9PO0a6VmRJAQ6lcpcEXslRjPK09zyEhdy
2QVVYXkWmcNX7IHX+TvO5kurujwmumaJMkXD1EbFzLab4/2CMqoU9tycJ+T8
nl9k0jXTuKrKLD9Uzjyq19Yz2jR7IVG91X5Qv9GGdp62BXt9PuLmaLNEFU2c
5VlrIKiGf69TXBDEm7XO/fmNnD7DGwDxcqG6X84vKPIYpRMpc7/rA8qNQmZe
cjOgZR+3HzqEq7cOipkZlhVmejm1Wg0VNw+P9fxKSk56/mPUXh7TjtkPU8wK
I5cEMkrovNHwGsMFo3RbczMn6WvtideIZi0UkPfmsw0v9+umeU1TJlm2uwmW
Fgm9VvFvep6TEpqXq6H8JLJYe4o+4Hvc6Js5fYrXFFbirsGd+mY+NcOv8Db/
btXp2jAoMRwvn20ns4sLRLpdO96F4jwkurEd1LoCAAA4I/8UIOLjbw60GeOD
xe071W+/C1z+7vN//UAqfrz97XfN5v6T7YT04ONnvHtgEuO9Dx9obcXR+uoZ
/etBsxgjVM09qtvNlrWTUwhNPWZdhmXOE3ml7t1TvyOTxVKwQ6/dloWxlPnc
dhyrtp4SL/kSo7Yik6ksjw9Yp3xdEq+63VNwFqPpzuAf2LybW1WJN4R4rMTo
JNI/nGsVdUq11arltOy9YmqMKKtutlkny0K1+QKPNNjDnmTEBO+y7aZjbRc0
2pYYVimVpPo6j2edfUNLqsaB99wRQWRxkZvnvbxMVB6CsM59u9KzKCokMQRB
ulpsOPw1C9OCv5EhnHNnOyNSNf/UVV8bKXHSlRIsFiJKfpfnon5XFS+bPBFX
nUnLJf5vu5qbpvqG7T8xIaU3PbNUWHLedXu/Uo2dmQm/UWQptFqVqzQwi9E1
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
3vOy3kJY8yVe5LnirH98939+9x3GqVyTT/DTzM1adlwMHQUJwNnZL6iTmU6Y
aO8VlETfhOyZiW3Sv0e/FXKuP1hzdi6g+3hHOu7z5aCgjJ72t+MBOBUX9Xt2
7waH5fS4O137tnOhv/x1WM7Oqtknb7+Vvqc4tXu6csWsD+seTu2uSr2VDwCc
I0/SdCxd9kMgp/EoLSZT5fNtVwY06d83ifGG/EDbRXQf70zHfY44DXNBlG5U
MTAEXiWQGDHwX6vhv5hzZ8Cvk709XKjEcBr1Yw5nBG809j7/8Yuh4IuBBTqd
jv01MQBOj7v+ZNw7CklWFnKlvs0vZ+C4Jh0S47Vwzt3Hu9VxnxP8J1MTRFo0
Yg83AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAC8aZzod8f2CgoR01uDfguG/44J1YsX8cM1
zWp2nEi3aheQNAAAAAAAAOC0NCvppFLo/P7siSTGy3ppzawOlg+NsnGv3LiQ
30q2aw+N4vM3/HcpneIVot1/wzMJAAAAAADA+eGUdNIrMaoXogi+n1jGrACJ
AQAAAAAAvi8cGCoVRkZGhFFCkqmi7UqMsYz5MKOKRBCIvFxsT0A4jUdZbUKk
o1ScSZt77uIo29QScn7P/Zx9cTZfWtXlMVFZCSxe6k6LNArTNLVmZi8rskjI
RMp8Xi/d1JRJkSblzCN/LsR+bmYXFHFUEBJUXjLr7UVYjY2MOiGKSTLiMZ6r
NRuFKUG9Z/k5IVrhUT41K0sipdOZspdes1FeTasTlL/MmJp74oX6LCdier2Y
mZXEsVTpWUFJKIVGO8P7eXlULwY0QfWGKC7ksguqMi2LoqTfqdgDsspzohub
OW1SFP+P/+s/TxHh0shIghAqZp4wgxczMyx/hIhyarUK4QEAAAAAAN5BDg1V
CM9iXCLKjVLdduzdvJKg6Sf8srOdEamaf8qD4sZGSpxkEX6fxBCIcrPSGzYH
JcbUCJnJVXjwb5nzwsiomtt2/1hXiehPndjbpvG4ZrFw3SqnxwRt3ZUKBwWF
KPlddtWp31XFy2bD8RIMSAxBkK4W+fVmvTAt+Hs0mu5SrgObf3FVJWPZajsn
gpgy9z1VwDJD5JW6l9/6HZksloJvwSTGyFjKV1UNU6c09diOzaqbEzpfqL10
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
suU4jXJungqexLCrxp2it46/cU8j3tImPkgo557afCX2dYUKvsTgw9dX+Z4J
56Ccm6UjnaZ4WlDWPIlR1IRAd8aafVHVpqROq96hvRfD8fdiJFMlNwAONch8
e7LgrW51DiuFy3SEeKGOU7vFV9GXDtwdEofV6kF74X23G7LKq4WSOynj7OWV
hL8Kwsdd2q2vVW0uWOz6To3n/sBQKR8H43sxRpXCfstPMyFnNtxlyTt5dZR1
zY2+Z7XsrTTfi7HtDsS9bFR3XcmwkS88cdez2JXMOI+anOdmfr3qrgm3SovU
jYp792Kokav9I4PYvvS7L+iuP1dvl7npWHFPk04f2mrW85OSNi9FaKL2qvXG
S/6t7JTgf+tlKUWIerfuOHZtPS0TQfIkhntoDOum3eFHdltRT9DUpu2737ES
g5evnNuNOz0mqgSjJYZrf6Jkg3sxdvpdoieHMV4Ud/TNCUsn0seiHKDLMBIj
KoVwKfC90tn8ZnCgIb7mxpZLZL3rUrstca3d9J4YO0tlzBJpqegtZ7GfV+ud
/VaDxtjd9e1jfC9Gi5XmE7O0H2/8ISVGlFdba6owmeMSw64Xr8vk0mklxjFu
3N6LwaRH067d06mXiLce7D53Cmu7oIsj0RIjVLgD27QTSIyYR3ceeV8jo+7O
Mua3GxmZjLT3YkQ1m95ejMuFyiHfuVO8ysou62Y37JbnKjEimr6exifKLHES
42S14wzebj/J6VdylQGDAQAAcHF889Wd279PTBne72L89FcH+36D2T1R6kfh
E6VCEqPV3LlX+kAy3pdLv+wfz7HK2Rn3NI+ptPnU1IknMWrmDX6YBqFUnEoV
nvqHZhSX+fk2QlLJbFQLs9RbKOU8N/QJwo8ZmcuY6xnJ32rhbpv1h9QaBhMv
U53xRr6sd6S9jzKEf5gPEbwTpfY6J0qF+ndnz+QnkAgCmdBz61mFBk6UWtH5
GSAs4xOaf7ZJeGahei+jjlPiHjqSXu89NMU7oIYkBP7xklF72TDnqeyfx86D
HDJbqHvDpFTLXFWlUYGIst45xaV/4p6fKMXPwOG3rfBuxHpSSM3wM6bYK6o3
So0m68JKuQV+ghHhy9Jy7pkqvQFkmh+bI5CeM4uieuf+9Lu4p9/k1tLqGCGj
orJsBNfkNFhwdSlqUYG7DUG/nuJnCYW+5dTv6RIZGSGidrtcviW3JQbvNFX3
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
AAAAAAAAAAAAAAAAAIDXxP8PT4QNiw==
     "], {{0, 200.2249718785152}, {792.6509186351707, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96.012, 96.012},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{792.6509186351707, 200.2249718785152},
   PlotRange->{{0, 792.6509186351707}, {0, 200.2249718785152}}], 
  "Text"]], "Text",
 CellChangeTimes->{{3.910968696498214*^9, 
  3.9109687026284*^9}},ExpressionUUID->"2a24f95f-39ad-4f72-bf36-e6bf96cfcdc8"],

Cell["\<\
Wolfram compare thing in the context of numerical, the custom function p, if \
apply, its job is like a converter, not a compare-one .It didn\
\[CloseCurlyQuote]t return True or False, 0 or 1. But return a numerical \
value which used to pick suitable position on the sort result.\
\>", "Text",
 CellChangeTimes->{{3.910921592303031*^9, 3.910921796633655*^9}, {
  3.910921937386842*^9, 3.9109219436825523`*^9}, {3.91092198300471*^9, 
  3.910922059548545*^9}, {3.9109256957181787`*^9, 
  3.910925707998497*^9}},ExpressionUUID->"2b2e0dcc-1e16-4408-83f9-\
f4520c2c077d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertHandToValue", "[", "hand_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"card", " ", "=", " ", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"hand", ",", "\"\<\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"cardValues", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", "\[Rule]", "13"}], ",", 
         RowBox[{"\"\<K\>\"", "\[Rule]", "12"}], ",", 
         RowBox[{"\"\<Q\>\"", "\[Rule]", "11"}], ",", 
         RowBox[{"\"\<J\>\"", "\[Rule]", "10"}], ",", 
         RowBox[{"\"\<T\>\"", "\[Rule]", "9"}], ",", 
         RowBox[{"\"\<9\>\"", "\[Rule]", "8"}], ",", 
         RowBox[{"\"\<8\>\"", "\[Rule]", "7"}], ",", 
         RowBox[{"\"\<7\>\"", "\[Rule]", "6"}], ",", 
         RowBox[{"\"\<6\>\"", "\[Rule]", "5"}], ",", 
         RowBox[{"\"\<5\>\"", "\[Rule]", "4"}], ",", 
         RowBox[{"\"\<4\>\"", "\[Rule]", "3"}], ",", 
         RowBox[{"\"\<3\>\"", "\[Rule]", "2"}], ",", 
         RowBox[{"\"\<2\>\"", "\[Rule]", "1"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cardNumbers", " ", "=", " ", 
      RowBox[{"card", "/.", "cardValues"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "*", " ", 
          RowBox[{"10", "^", "4"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", " ", 
          RowBox[{"10", "^", "3"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"10", "^", "2"}]}], " ", "+", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "*", 
          RowBox[{"10", "^", "1"}]}], " ", "+", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], " ", ")"}], " ", "&"}], " ", "@", 
      " ", "cardNumbers"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.91092388733049*^9, 3.910923994524981*^9}, {
   3.910930871936853*^9, 3.9109308753443336`*^9}, 3.910931585505468*^9, {
   3.910931733886726*^9, 3.9109317730874853`*^9}, {3.910932515390991*^9, 
   3.910932522806394*^9}, {3.910932593463626*^9, 3.910932603533491*^9}, 
   3.9109344974644403`*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"4443465c-b7ff-4a4c-be4f-62d244c0ab13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"handsGroup", "[", "1", "]"}], ",", " ", 
    RowBox[{"hand", " ", "\[Function]", " ", 
     RowBox[{"convertHandToValue", "[", 
      RowBox[{"hand", "[", "\"\<card\>\"", "]"}], "]"}]}]}], "]"}], " ", "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "10"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.910923999692704*^9, 3.9109240344204273`*^9}, {
  3.9109257318982477`*^9, 3.910925759543099*^9}, {3.91092584674457*^9, 
  3.910925917193452*^9}, {3.910929294572102*^9, 3.910929312880755*^9}, {
  3.910930911098331*^9, 3.910930942526697*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"a1c7bad6-2943-44bc-bfc7-cead342bdccd"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"23Q7A\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "878"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"25Q47\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "739"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"26T7A\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "345"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"27T34\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "134"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2897K\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "321"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2935K\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "543"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2T476\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "90"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2T6Q5\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "559"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2J4KA\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "43"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2J876\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "713"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2JT9K\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "136"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2Q695\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "273"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2Q93J\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "755"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"3298A\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "325"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"32KJT\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "733"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"2K597\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "742"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftSkeleton]", "182", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KAQ25\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "927"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A568Q\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "98"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A5TQ9\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "805"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A6K78\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "160"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A75T9\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "425"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A7Q8T\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "983"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A7KJT\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "309"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A83K4\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "905"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A937J\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "37"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A96Q2\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "302"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"A984Q\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "821"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"ATKJ5\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "82"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"AJ482\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "255"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"AQ2T6\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "99"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"AK26J\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "964"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"AKT86\"\>"}], ",", 
      RowBox[{"\<\"bid\"\>", "\[Rule]", "936"}]}], "\[RightAssociation]"}]}], 
   "}"}],
  Short[#, 10]& ]], "Output",
 CellChangeTimes->{
  3.9109240360607843`*^9, 3.910925856197988*^9, {3.910925889436512*^9, 
   3.9109259181698513`*^9}, 3.91092930142899*^9, 3.910929363210969*^9, 
   3.910929592909171*^9, {3.910930107927518*^9, 3.910930132718237*^9}, 
   3.9109306519855003`*^9, {3.910930928300198*^9, 3.910930943560937*^9}, 
   3.91093123341149*^9, 3.910931418633855*^9, 3.910931779723537*^9, 
   3.910932538964868*^9, 3.910932611030251*^9, 3.9109329976269083`*^9, {
   3.910933031029995*^9, 3.91093307032616*^9}, {3.9109565104017773`*^9, 
   3.910956537517456*^9}, 3.910956667068346*^9, 3.910958757293738*^9, 
   3.910958935516096*^9, 3.91095904659457*^9, 3.910968257517838*^9, 
   3.910968659124593*^9, {3.910968749400181*^9, 3.910968787187475*^9}},
 CellLabel->
  "Out[180]//Short=",ExpressionUUID->"ef526e05-2964-4c08-bb36-d45936bccb2b"]
}, Open  ]],

Cell["Nice .", "Text",
 CellChangeTimes->{{3.910925926426495*^9, 
  3.910925931169009*^9}},ExpressionUUID->"c927f190-66ba-489a-8d55-\
384088905328"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.910925945665803*^9, 3.910926018557263*^9}, {
   3.9109260563995647`*^9, 3.910926058732082*^9}, {3.91092623498472*^9, 
   3.910926294920847*^9}, {3.9109263390646*^9, 3.910926342306497*^9}, {
   3.910926377112953*^9, 3.910926399873412*^9}, {3.910926790870714*^9, 
   3.910926858577394*^9}, {3.9109294650919333`*^9, 3.910929493897664*^9}, {
   3.910929547535324*^9, 3.910929547768365*^9}, {3.910930197125855*^9, 
   3.910930234315539*^9}, {3.910930275572513*^9, 3.910930296004881*^9}, 
   3.910931100849234*^9, 3.910931165874614*^9},
 CellLabel->
  "In[181]:=",ExpressionUUID->"0bc278e1-09a5-440b-bba9-86f122f8664c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsWithRank", " ", "=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<card\>\"", "->", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<card\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<bid\>\"", "->", " ", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<bid\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<rank\>\"", "->", "#2"}]}], "|>"}], "&"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Values", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", 
            RowBox[{"(", " ", 
             RowBox[{"hand", " ", "\[Function]", " ", 
              RowBox[{"convertHandToValue", "[", 
               RowBox[{"hand", "[", "\"\<card\>\"", "]"}], "]"}]}], ")"}]}], 
           "]"}], "&"}], " ", "/@", " ", "handsGroup"}], " ", "]"}], "//", 
       "Flatten"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "hands", "]"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9109303171722317`*^9, 3.910930359360449*^9}, {
  3.910930460830536*^9, 3.910930483327223*^9}, {3.9109307016349297`*^9, 
  3.910930718722547*^9}, {3.910930952145466*^9, 3.9109310608575172`*^9}, {
  3.910931092201515*^9, 3.9109311692613564`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"82077c82-c61a-4935-a5ef-8cf6eade5dc1"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"23Q7A\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "878"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"25Q47\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "739"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"26T7A\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "345"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "3"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"27T34\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "134"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "4"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2897K\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "321"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "5"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2935K\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "543"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2T476\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "90"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2T6Q5\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "559"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "8"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2J4KA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "43"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "9"}]}], "\[RightAssociation]"}], 
         ",", 
         TemplateBox[{"982"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"KKKK7\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "773"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "992"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"KKAKK\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "579"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "993"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"A3AAA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "216"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "994"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AA7AA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "157"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "995"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAA4\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "488"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "996"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAKA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "673"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "997"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAA9\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "387"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "998"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAAJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "738"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "999"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"JJJJJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "440"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "1000"}]}], 
           "\[RightAssociation]"}]}], "}"}], Short[#, 8]& ], "line" -> 182, 
   "sessionID" -> 25339849786080793839, "byteCount" -> 568192, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.910930990312621*^9, 3.9109310272612333`*^9}, {
   3.91093115772326*^9, 3.91093117098765*^9}, 3.910931233693315*^9, 
   3.91093141882412*^9, 3.910931779942453*^9, 3.910932539102235*^9, 
   3.910932611164302*^9, 3.910932997741633*^9, {3.9109330312107363`*^9, 
   3.910933070467362*^9}, {3.910956510542728*^9, 3.910956537770935*^9}, 
   3.910956667210355*^9, 3.910958757447372*^9, 3.910958935748458*^9, 
   3.910959046791864*^9, 3.910968257609568*^9, 3.9109686592173147`*^9, {
   3.9109687495631866`*^9, 3.910968787349197*^9}},
 CellLabel->
  "Out[182]=",ExpressionUUID->"48b57b6d-2155-4813-a15f-10507497402e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<rank\>\"", "]"}], "*", " ", 
     RowBox[{"#", "[", "\"\<bid\>\"", "]"}]}], "&"}], " ", "/@", " ", 
   "handsWithRank"}], " ", "//", " ", "Total"}]], "Input",
 CellChangeTimes->{{3.910926865754324*^9, 3.910926899136705*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"75c3c041-bc6e-4c55-b843-6f82464d3911"],

Cell[BoxData["247839006"], "Output",
 CellChangeTimes->{
  3.910926899523093*^9, 3.9109293019361897`*^9, 3.910929363549302*^9, 
   3.9109295594097013`*^9, 3.910929593197*^9, {3.910930108128141*^9, 
   3.910930133059135*^9}, 3.910931172326272*^9, 3.910931233877787*^9, 
   3.910931418998645*^9, 3.910931780073716*^9, 3.910932539222541*^9, 
   3.910932611304284*^9, 3.91093299785981*^9, {3.91093303134133*^9, 
   3.9109330705888023`*^9}, {3.9109565106889067`*^9, 3.910956538034137*^9}, 
   3.910956667367282*^9, 3.91095875761639*^9, 3.910958935931443*^9, 
   3.910959046917858*^9, 3.910968257717404*^9, 3.910968659326989*^9, {
   3.910968749701877*^9, 3.9109687874849043`*^9}},
 CellLabel->
  "Out[183]=",ExpressionUUID->"cdadc00c-bf6c-46d4-b6a4-8768e9e6df16"]
}, Open  ]],

Cell["\<\
Wow, wow, wow, surprise, I think everything work perfectly, but the results \
is wrong. \|01f606\
\>", "Text",
 CellChangeTimes->{{3.910932564063796*^9, 
  3.910932629773583*^9}},ExpressionUUID->"c4c1f370-1a4a-444e-b830-\
22c8e86db0dd"],

Cell["\<\
It took me 45 minutes just to realize apply the weight of 10^n to each card \
is wrong. Because it will get corrupted. It just my feeling, I still not sure \
the mathematic reason about it. Actually, we can only obtain correct result \
when n >= 13. 13 is the number of type of card from A down to 2. But what is \
reason that why only >= 13  the right way? \
\>", "Text",
 CellChangeTimes->{{3.910932645568572*^9, 3.910932790712399*^9}, {
   3.910932826497263*^9, 3.910932852145679*^9}, {3.910932951843377*^9, 
   3.91093295538756*^9}, {3.9109332156319733`*^9, 3.9109332945296097`*^9}, {
   3.910933351690748*^9, 3.91093335255475*^9}, 3.9109347434186563`*^9, {
   3.910939645408145*^9, 
   3.910939645824511*^9}},ExpressionUUID->"887ab461-9ff5-4d0f-9803-\
2862d6576549"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertHandToValue", "[", "hand_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"card", " ", "=", " ", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"hand", ",", "\"\<\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"cardValues", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", "\[Rule]", "13"}], ",", 
         RowBox[{"\"\<K\>\"", "\[Rule]", "12"}], ",", 
         RowBox[{"\"\<Q\>\"", "\[Rule]", "11"}], ",", 
         RowBox[{"\"\<J\>\"", "\[Rule]", "10"}], ",", 
         RowBox[{"\"\<T\>\"", "\[Rule]", "9"}], ",", 
         RowBox[{"\"\<9\>\"", "\[Rule]", "8"}], ",", 
         RowBox[{"\"\<8\>\"", "\[Rule]", "7"}], ",", 
         RowBox[{"\"\<7\>\"", "\[Rule]", "6"}], ",", 
         RowBox[{"\"\<6\>\"", "\[Rule]", "5"}], ",", 
         RowBox[{"\"\<5\>\"", "\[Rule]", "4"}], ",", 
         RowBox[{"\"\<4\>\"", "\[Rule]", "3"}], ",", 
         RowBox[{"\"\<3\>\"", "\[Rule]", "2"}], ",", 
         RowBox[{"\"\<2\>\"", "\[Rule]", "1"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cardNumbers", " ", "=", " ", 
      RowBox[{"card", "/.", "cardValues"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "*", " ", 
          RowBox[{"13", "^", "4"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", " ", 
          RowBox[{"13", "^", "3"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"13", "^", "2"}]}], " ", "+", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "*", 
          RowBox[{"13", "^", "1"}]}], " ", "+", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], " ", ")"}], " ", "&"}], " ", "@", 
      " ", "cardNumbers"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.910932972222226*^9, 3.91093297945424*^9}, {
   3.910933011256096*^9, 3.910933084176312*^9}, 3.9109337968156424`*^9},
 CellLabel->
  "In[184]:=",ExpressionUUID->"ebd5b07d-bcf4-40cf-b11d-f38c27f19bb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsWithRank", " ", "=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<card\>\"", "->", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<card\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<bid\>\"", "->", " ", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<bid\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<rank\>\"", "->", "#2"}]}], "|>"}], "&"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Values", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", 
            RowBox[{"(", " ", 
             RowBox[{"hand", " ", "\[Function]", " ", 
              RowBox[{"convertHandToValue", "[", 
               RowBox[{"hand", "[", "\"\<card\>\"", "]"}], "]"}]}], ")"}]}], 
           "]"}], "&"}], " ", "/@", " ", "handsGroup"}], " ", "]"}], "//", 
       "Flatten"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "hands", "]"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[185]:=",ExpressionUUID->"bf2171f7-0bfb-474f-8c61-20064467f7e6"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"23Q7A\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "878"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"25Q47\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "739"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"26T7A\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "345"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "3"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"27T34\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "134"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "4"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2897K\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "321"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "5"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2935K\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "543"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2T476\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "90"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2T6Q5\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "559"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "8"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2J4KA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "43"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "9"}]}], "\[RightAssociation]"}], 
         ",", 
         TemplateBox[{"982"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"KKAKK\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "579"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "992"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"A2AAA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "219"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "993"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"A3AAA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "216"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "994"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AA7AA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "157"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "995"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAKA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "673"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "996"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAA4\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "488"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "997"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAA9\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "387"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "998"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAAJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "738"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "999"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"JJJJJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "440"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "1000"}]}], 
           "\[RightAssociation]"}]}], "}"}], Short[#, 8]& ], "line" -> 185, 
   "sessionID" -> 25339849786080793839, "byteCount" -> 568192, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.910932997949136*^9, {3.910933031485488*^9, 3.910933070760015*^9}, {
   3.910956510839376*^9, 3.910956538280006*^9}, 3.910956667536456*^9, 
   3.91095875777555*^9, 3.910958936128974*^9, 3.910959047101891*^9, 
   3.910968257804905*^9, 3.910968659423252*^9, {3.910968749862028*^9, 
   3.9109687876289053`*^9}},
 CellLabel->
  "Out[185]=",ExpressionUUID->"9c3eefb5-aadc-4866-8018-6567b209491b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<rank\>\"", "]"}], "*", " ", 
     RowBox[{"#", "[", "\"\<bid\>\"", "]"}]}], "&"}], " ", "/@", " ", 
   "handsWithRank"}], " ", "//", " ", "Total"}]], "Input",
 CellLabel->
  "In[186]:=",ExpressionUUID->"8f092943-10ee-41c7-a1f9-1eb94bbe19bc"],

Cell[BoxData["247815719"], "Output",
 CellChangeTimes->{
  3.9109329980796137`*^9, {3.910933031610614*^9, 3.910933070883224*^9}, {
   3.910956510978818*^9, 3.910956538454184*^9}, 3.9109566676710978`*^9, 
   3.9109587579192123`*^9, 3.910958936297374*^9, 3.9109590472712193`*^9, 
   3.910968257932641*^9, 3.9109686595254097`*^9, {3.910968750003229*^9, 
   3.910968787783821*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"89fefb96-6ea7-4ea9-b673-a9e8481b57d1"]
}, Open  ]],

Cell["Corrected", "Text",
 CellChangeTimes->{{3.9109396730894127`*^9, 
  3.910939683485489*^9}},ExpressionUUID->"6301a8ca-02c6-4d1b-8994-\
b863f8e23b62"],

Cell["\<\
I still counted as losing in this problem, because I didn\[CloseCurlyQuote]t' \
t understand why >= 13 give me correct result \|01f613 . I will back to check \
it later\
\>", "Text",
 CellChangeTimes->{{3.910934846093452*^9, 3.910934894158778*^9}, {
  3.910939688144917*^9, 
  3.910939719609206*^9}},ExpressionUUID->"b9969768-7185-4f7c-b760-\
433c1ae60a7c"],

Cell[CellGroupData[{

Cell["Side note", "Section",
 CellChangeTimes->{{3.910966249043407*^9, 
  3.910966252384368*^9}},ExpressionUUID->"51795d14-99c0-4308-92da-\
f4ba1a8fb878"],

Cell[TextData[{
 "It took me a while after finish part 2 and go back, try to make my head \
clear  why n >=13 work. From the start, I pick n = 10 and entire function \
firstNum * 10^4+... +firstNum is simple... unconscious. I just have a feeling \
that this path will yield the results, my logic is that each will give weight \
to each card/position. but it simply not enough, why I pick 10. This is the \
problem, why not pick 2 or anything else. Now I remembered, this pattern did \
came from the method that ",
 StyleBox["convert a binary to decimal form",
  FontVariations->{"Underline"->True}],
 ". \|01f602\n\nExample:"
}], "Text",
 CellChangeTimes->{{3.910966264809779*^9, 3.91096653579677*^9}, {
  3.91096659334942*^9, 
  3.910966595981676*^9}},ExpressionUUID->"4ffcd8d2-ca20-4af4-b9b0-\
9c62b9750e78"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
rpZ83hgg3iz56upKB04osemouky20tNbU+TJeSraWl+VXFzKbsWotORpj4pp
zjbNZPcK7merXdTaIl/Nkr9G2tcmlfj5Ox8LdyD2plw/dHbLreGsk8ETV2C9
6BptlHcGyX9PIu9BCqyWPOd5Zl1D5PdLQnRuqQyhtE5UTzGEsizy5ElNFGnT
Us/EtVt0xB1l5OGQ+LjUJ11GnFnamiJPF1vZ0BMl2mnVauJQtfmKcXkWIqGb
UsUL3dT12iGpFrGlnl5Xnzx50YzY0havMHE6ufvk6R1Z3AuFpWj4drR8IeL6
ru5eODZXEsPzZUUpLBCRJ0serj75MQH5gvYYOcqRRvTKs8gbcyJxwbpGl04M
BsNTFau6NUUenweLlGB1uR9lE32su0u5shgVFUh6FBuUrTe4k5T6QtHlUxB5
0ydvez+isCzxpEXIM0CbCofup8plK4c3OIttLwYx2rnbNuW2LeucuAIrW9kO
8UT5HI+MhkVeOonI15OCY7tPHlc7Z1vlr7pGZizT+MKpw2MH+jKxbOOV61Pn
CJvIG0KE+NCYnFxIyQ/Dfh+yrXadjsgf6xmybsgFo3NaZjubWZUjPbz/Cl+O
rhn1I58gPkqp65r6mMQnWIP5S9QReePFB45ztuleMtyGuJ5IYlEj0TsTIrnr
EcXFviK/ZNhuSV5OZ7fpan6H399ZJbpmSfIjhuuREnOKGRrRGQhwriJP/NhM
azCGC7CRzePDd+VQK8P1RZNLmraWit/isZSSRy3+vI0LzlQsEumZ2DVEKpAE
IGnqk2gQ31HpXZXlCImA6YvKC4q6mIwNCWwLG3yUcbNdqP15LZJa09IvitE1
NdXVWC4Jj5PQEW1RjvRyqDWYeOESslFL5Ol7K6iFFYbjyUVVmU9Eenm+J+Du
UnYpRkUF0h6F2kNGhRjROKgrqh1WOVvtotYReRJdE25nitE1KXks5Pcx5IXQ
YpwVfgQH7svKmhkrxfaZwu4sth3ahZB/KKFsZLMvNBKg1WEJ0Dp5BVa0sgMa
VRhesM5CGhF5PE/0Mf5hWV1PZ/b0hkS+nhTYb4SOR9QejM6kFCOoqU0IdLmP
RxL838KFH6naejpbvjMaktFpiRc9j9hFvritQYf54mTY8eLkKYk85jCTGgsb
YcZ8VyjyOJ21+eRz6kRxs4V2ITzu/jpnPZEnDc3hB32f03bS99SEESdP4/BJ
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
4gxT7QXJrSw8tKVpk61p2hqpRmx7h1mLd0XXIl7yzh9l492IvZV02avP6a4x
EtuJ1m39aIY1t5Zydde0MLbMYrhyWlDwcd78d42KslGvLXZI8jvbjotG8jsj
4w+xXop5jkg+dzZ0V+RL6e1wMXzGpKaQGsKHRDTLRUi6PfMxSsvgmjPRS0UZ
7hrXbNG6y1fEvnLLVVdJFZFvRrXbM4nr6/HQzUiKDLraFVVQnN/qmYkAy9EB
W7uljErmRMVyLB7aTLsxJOmZuXDKMqFw5PsDXFiP8r5AYu+YVOZdjn+gZbFx
2BWn5ocmtbHiYkVOTM8iX5FjN5+8aeSvLyRvVW7sT5VnuCLRLnVZWNPOHhuH
2yezBSN3DLVVmijylZ0nOyUUvdnuIk/ShVe4u9MPeNQexael3zpNaFvCZee9
16jGY6PVyNPNMJKWJc5XNwOCnpkKsFjWttzMfYfIV0tR3W1NElTCVeT56Ib1
/HR1gN5R7Ypy3HLttnBdYiDp3pCfhrKQGuNGqIjtJgLYPNhVad8mH+Smg2Zv
wTfbWuEJPyAZz0NP8mYZqiXdrltR37fIN6Pa6XIw1xtNrmUL1q9qV5Trt0Xq
thSp5FtJ6/eFUloocuY6mbsBF3QyVw3NFcicsYMn+Sy244Ih+5sxf2sx48DJ
fPIVXVodYdEVPHEg7eISG4DNWXv7lk/VSC62Zor8bee6amG+lC3RXeSJN8AV
OvsmUydHGsRj07yp6pOvWo30JxtRv5mIhNg5rIv22sgtiHj+655A8LhC5Atk
5AZnHMJmJN+pTBvnYeHVkrOvdkXZqdMW7rVqyYtEZo7UVsTiyZKSEz88lX1c
ZtZUpIJtScLaK+mCac119roVVUPkT8Nd05xqP9a3U7EhmjKv1R+8G1d39foV
ZVaF+xJzvZaqmSjQvZJpDYDI14KYgtywUsD1zNElV9IfWPxExt2MLTlJTmjJ
O5K90hbsxSJA1aAnptGQAOt/2b0KiWpc5IlZ0hmzZeZdj/AtTbLkJ4SiiVXF
kie2SiixWXFr1MXtHtZCilfDkq9WjRQam8cOKYV8MsRy0nINd7yemxf9iA2M
aVUfBB4t+WvkZj1Z8tXVpnZFudxy9baobh8Wr44NeDx52c5jSTdmhcRRj2dA
BXyDRaPXuNlRJePsltncwXEdka9bUTVEniZUtS+8HmtvvvDahGov3V0+s5qM
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
HxDGZxtRbCYaVg1JQ99i2UzVmHnV3Vt1L4lVwz1djqNC9HS0k5qg5Samcbko
cM4j2Whid9uQKXd7kkzEls2Nkp0QbEOYFW0j0cxJbdghDYm8kfjV6VsjyYY4
yUVe3HzyNhvYeMQbArJJs13bO4yRWdJ8HlkgMshapvnWwbJpJB+xd7xDRWSt
Il+9GN5EnqS8t2IX+Tr57r2IvO3uqojDTdswzT9xnYPTHtLtzNeAp88uIm+k
/nR2BmuCTo8inwhUc7SuR3kjBz3dmRO3SBafpIvqp65Jbay4SGvtJCLvzC1C
Gt3MZOo6TLLx7qJQO06FiillDfAowNNA21IyLnzRNG2qyLskyZ0SzL5UReRz
j1w6G8mh3B7Vjuq3vg0zYbFj0TyfvFnKdY5FGJF808ZV8CO77t6qR7nkLWyq
RdyTFjsqZDNWTHlvgcz43oG1vFOlclGp/AmZLlUuwOWdPnn7uNiTsVkjLp5A
5N0vl5sOFhNnOz6vv/Cq3S8u0q1KrGt6+RZ/dNN55oqbsgyWZcklhA93TodP
vlox6oo8rRPnGqtd5Ovku29IFizH1l54dWTnKZ24gR5SSOJPgzPOwU8SGzUk
8qS0Lq1GS0mcXaG5AvF6dfBkOGNr0JB9PMBbw2bqupP45P3O4FUj19KIZlSC
a+dCt5JO7XHJ2aRF2pxjhHQYo06aK/K3nS1VmKfNuldV5HFnc701plVSj+q3
vg3jtBXbpaoj5VS82akAYmkz0aast7dqQR3FDykhtlFlODkqZNV18LomBz9f
1BJ5alpXPP1Ju5+KyFe35N2GXmMiTx/i4pwzQ31mO1uZor6WyJPJdYVRd5Ci
JkozRJ7meOLu2wa1Z0veaDWaJWpEtZ0UT75OReTdmyzjmOuVLHmu0pCjQtGI
yOskVL6yJOaX2IAnpiC+I47OVogUs3hmlH0UYEtzk+ZZ8rT3GpUQ0144e1d2
r8K+bFTkG2rNE1jyE4JpQVWz5EkrhBKbFbdGFtHqt74N05K3922jYL3FVJ77
1K5+nCssS1xruFaA1lGeKrxfWqr+Iy+WfN6wPd5bS546ye0ud8NJ7lnkNfKU
rCryzm9dfPJ7yTBWhhG1UhSJI9Rq4ddWV50Y2/771lldQX0YCg7JlfPBWiJP
zsOwvTb3LEmLzHgW+Rn3iUnpbHSqbh+MDp98nXz3ujLE2ue5OeKPrSfy0klE
3mgyIbZZa9Wm7JMf5hwuWbIQ1lLFJ1+loshEpjKUolTOJZFrj8jjAjtoPgax
kcAOJhI32fJKx4l88qgnblkF0TPY5ixOA0klsEHbfgs7SakvFF1+c5FvpDVr
taPpkxetkpin+e5v1fTJm/GKlqP0dGIwGJ4ii5V1W9+G6ZMPJS0VVViP+nFn
flTq72ThBnVHY7dZW4J1B4fZ5CCPWgPR1Zpxuo4KcfXJj+EnRTBxvvfKqCny
uC9j9SCr52RFXjFWzwM9ni15aoega5HUmpZ+UWkyV3xrLCAa0TX4ctORYDtC
nZLrLl3Edm3hwo9UbT2dLdRX1/yy5CdRMfHUqqatphJkYZ0Lz7k8wWuJPP5j
CZ+HIYEWcwpZoB8WuM5AgPMq8s5iV4Bn0Kwxgy7hzAFdO9+9kQ0Q+YcS6lY2
+0JL3g9wvpoinyeBKP5hWV1PZ/b0hkTe7CEcjb/aLsZfXeHdewh+ZLcxqJ0E
V+D2TY6H/W1CoMvdknevKBpCU2v4F1LhVo7jyoue+lqEx5+0BsoD+UTRNUI3
z3VLcaPR75LoGv9IcQ2ZVgJqD0UfK9q6pjyJkaiwrqhW+ShvWOQbac1a7ViO
rgmNyallNfU4GupETGswYaxJVY2uoTYMjZ9R1zVtUSahXPgoMyanTuvbMCz5
boFrD0amjQ4gCix+xMfSlooi7dXCMKX4okr21SgN6RFn1PRG2vxv0y1WzVkh
x4XlCAkV6ovKC4q6mIwN4XHEBh+d9xdma4v8sT0O9lo4Ol8rCppgE/njwlos
1Mmiloo4+Wrf6lllQgx20izvHUL4gZyu9qzWs8m7Ad5nj5Ovrq6Y/LpMUs+3
Inwv/h4xvpxzbdzaIk/PU46TD95NaHsVcfI1iuEodiUHWKbsAcNOkT+ume+e
lnC1GIrcRkKRlYmaPnk8VqfDAofc4quLv6gm8se2HkLeMX+cztaJkw8YcfLC
zUhyM09mLm4i71pR+nqUr5xx2yCrgYy1qIfETWTzVJw0Tl6dEgOdbLU4eYXG
ySNE63w0mXFdCmxc5I8baM0a7ViKk09FLSH6HuPkM3NmnLzzqOM6rW+jFCe/
GDOj7q1x8uUKIfZ2pWepBJniuSyuua7FOyqEVsRGUQTomxrxpfcgTr5x6jkc
3j9qe6UaRieRyZzoaSuAM49O/LoVEVxVyCVvkifCuc5me0qcnfyJplsedqH7
vtiK4/mdLbaW7Hrkstry3lBIDfNcn9Unf1xYleqZlw2SV8R2xLu9HXCmyc2E
uA6bT54s8XiObcjPk99GvO2qBNg5MyJPAmxaxdR7YeG8I+SStznik6d+PPL+
5k0eWdy/7yH6elTwIa6HumfJS76S0MpwttWcJlAgV+FCj6vNWc8meUUirzAH
I49S5I3muVj4CkId7msuDnRsb7Sywanz7j49Lc6IyNNQef6+9q6X85xhbCZD
9zAxt3zZfH8V3qCwVdz+ArFcZ1CcUNyd+0AleU2+HzI2iWXbhOBIwnVvIqDZ
nA2RJy+9Vr6SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8H1RJ23r+4We
W4yGuni2TVLtFaLeNbYuRuGF7zsqrSkZVAEAeF+o2A0YRL4MfcOaH0wo6869
xPKbSuqx5G8BkQcA4N0GRL4GJJ1olfwUx+ZWbCDyAAC8u5AN8y2JbOiONFTk
pdS6TDZapJscBu/Lti31PCamLydnj4nVNp0zXqe9wpnfjsrm+49Hxr6O5QQT
RjLZcppC/IP28laN+bVE5KaZg568k7tRVEAzGU1anQgL7f6oW2LQatnbSdKc
ctWEUpWv+XoUeec2nhnnNp6clFw2txnEtU02MDyscnh3GBcvV1Xk9ex8NETf
TSbbFY4ptg12vCepr9YopfqcUJKjIaHNKJIYr72nNwAAb5GjQnZDDrcy/pFU
ejOdIdleqOxgIeigqefJ3iyi30d32jcO8Z6Y3tw+OsC3uyZnJ3udyTc5c/f4
VVV5HCW7cLeLqT1ysHafJ9uNmhOKbKKb7hda2smKJIA2X3/OL4o8Qv7bseSS
pi0nY4Nk+21pOV8qA9fBc1dC0lhc3XOWsVb29oNc+rHItfDSXDq95bJZtSeR
r5fOnj68EHslnFjO5Pay6cVYkKM74Xg73HYvS7i0XHCM7PutzEgCi/hRcw+Q
BpLU12qUYppyHxd4kErv5HLbmjxMarvq1t8AALx13Nw1jD0blJmMftvyby+J
6eslZ3fJA0XTTnF090Wyi4WvmDtjXw6yAemuYGY3NophpAciuSAZbihlTXiT
GuRQp/EtFaVrMfdtrepmb1+P8DV20vAg8nXT2dPatolkniQNKdZ2vcOtOHK/
ZmbE0LCcPWosSX3tRjHqk7Xm+D5Kx64w7FD1fIYAALxdXH3yrGgbtDsk3xzN
cdlIYvo6ydmrZ3TlJKJUJIcmG54n0lKYC7PX4pnNmN9nJIPAx7KmmboZpRm+
bBc3Ep4SnaRlsCXgsFI3e/ubinz9dPaktltFW6KjnUQAseXarnm47WJkx2NW
uCurjiRcDSSpr9co1F1jSdZ27J6vEACAdwcvC6/lZE+NJKavk5zdPdV7brqU
kaSQGjTyPOrKEEccNUfpaAeVfZISuqhaqxLrWiAj/6ZbnqYydbO3v6nI109n
X7e2ax9uR88tx8Venm1hUHtAHE+ZayUNJKmv1yge0m8BAPBu0ZjIN5KYvk5y
9upGY/HqhbkQ2xFNF1SpjY9ukDNqIxw3rBSw9c6JiqFg1EwV55zlyWxniTlb
W+TrZm9/Y0u+bjp7D7Vd63B3DrLafCzcgdibdM7VQJL6eo0CIg8AZ46K1HW1
07Y2kJi+XnJ2F/fvXjLMMfxI0XuBhYgVYjMRvj1irCDqSyLXHpHHA9xQMdpF
x+Y98t/XLJcvqA9DwSE5U0WULCWsl729AZHPqdPxxLLzQnXT2dev7ZqHW29G
mwqH7qdKJciTLI3U7dZIkvo6jQIiDwBnj2z8GkLXIqk1Lf2iGF1TIze398T0
luga9+TsR9lEH2sGciwrqelIsB2hTmueoJzci7g2bL0XZb+QCrdyHGf66g3y
y5IfscJwPLWqaaupBAkd4cJzrimJndTJ3u5d5PeoI32x8klXJ529l9qucbiV
/KLItbCB+7KypmmLCbETsX3m6kkDSeprN0ptkd+VQ21ccAbc8wDwblFYi4U6
WdRijZOvLjvHnhPTe4qTzyoTYrCThnZ3COEHctquXblHAcSw4YXSBfLJW4jx
OSUuv17MwO5j/T1ifLmYqameyB/Xzt7uWeTJ0nBxuuHkMJMaC5NcSD6WN9LZ
e/XJG4eX4+Q54/AacfKLsTCtatTKB4YTmjXkyHuS+hqN4kXkp0HkAeD9wIPA
nhd09S7nMRs1AADAOeH9EXmSfdgl5hwAAOA88/6IPAAAwHsIiDwAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA1OO/AAAAAM+8bc32ilHa/x8AAABokHdc
7Uvy/q9//evo6Oh/AwAAAJ7BsonF812WelyqzwEAAIAT8Y9//OOf//wnVnss
9e+gyBs2PC7nawAAAKBBsHgWCoXDw0Nd17HOG/b829Z1G7g8+OkDIg8AAHAC
sHjm8/lvvvkG6zy2599BYx4/d46OjkDkAQAATgAWzy+//BLrPLbn//GPf2A5
xaL6tnW9jOGrwVMMEHkAAIATgMXzT3/609dff42N+b///e/vmscGRB4AAOBN
wOL58uXLr7766uDg4G9/+xuIPAAAwHkCi+d//ud/fvnllyDyAAAA5w+ryB8e
HoLIAwAAnCcMkf/iiy9A5AEAAM4fIPIAAADnGBB5AACAcwyIvFe+3Rj7yZ2n
377lUjSF/R157LOxsV8M9M+PP//r2y5NE3i1sTE2qtwZ+OmNgdWV3bddmqbx
7fZGbv9tF6JJfLMhK3dG/2N89BdjT79424V5zwCR98jW8xsX4oPnQuS3J39y
aeA32/gfiZ+iy589f9vleWNejt14Orv73evXf306+MGFgc2zL4xfPxtX7g3M
XLi8svG2i9IcNlav9/+KPn7/PH59NnF+HsRnARB5T3w9O/rZnRuT50Pk91d+
eW/8D/tE7T9Cl//jzMvIqz/cu/zjO0/JlGRfnkUXF1fedomaw4py6er5EPnv
tsblS/e26b+/fTr4w345/5ZL9F4BIu+B/af/Mb7yhdx/TkTe4NXu70evf3jn
6V/edkGayHcbYx9euPGr7bddjuZwfkT+22d3Ji+P7hT//cPLYy/fconeK86e
yH+7u7E51v/x+NZ3za2JV1u/HRv82Y2rP7p4aab/3q+e7xbP/2p7fOzz/df5
UxH5/V353uyN/k8GBmYHRn+z9aqJp/52+9nqYP9Pr1764NLln96Z/P229eTb
mcnxTwcHldmNgyZe0uTVFyuTCzfu/K6Zd0OoeUeY/c/vXJbHnn/T5MuSB+K2
fO+ng/LXzT5x/vnkYv8N+fLFH12+Pj/+NGe7odMU+dO6o/2X8ugnN65PX7z4
4+sDn81uGCs+2HqPW0R+smjVA98LZ0nkv3k2Kl+9Kl+/+gHDfDi20VSR3/3N
4I1Pn1FX4f7ztf6LP0CXP10hQ+7bjcmVWfJ5YyL/avdrD57hr+X+D66ObtNf
HjwfnbnY/+tm9f79Z4s37vyWnu2bLXn+EjNxafB3Dlfoq2cLFy9+MuvJQfrt
7q6HKfbW+sDVD69ely9f+AEa2GyuyNe7o/yze7N3nnpXrb/u7tZvzd3Zn1+9
OnP9+ocXmIkbieZK4jfPx342kPgzqaVXXz298yFiftgvf1X+Hot8Qz75V1/v
eqjx07yjP0/2z44/p2bD7h9Gr8eZCx+Nb+BK/u7ZnQ8uj/6R/oZa9WDJf5+c
JZE32Zc/Rs0W+e3JnyD0o4FZo8+TWT/DxPvlv7ze/+3g9U/ujX46Orp449LE
5YFPJ1e8uBO/W7n3VK4rns8/vYxmxreKf2798ir68ejzpkwW/jo7gIfYTyfN
k3+duDHBIJleK78yvnBvlkY4bKxcRj+888xLTe6OD/5yq/7PDHZGLzdd5Gvc
Eea7bfkXo7NEIbdXtj09KLfXB0c9P1G3166jZkviq8ydixMXrq48N6ppf3Pg
wg+YS5+W18EbFPlXs08biP46jTt6/tllFL98L2OYN69WFi8xP7g4+PkrMqBm
Lt37A/34m6cDk81+uAA1Oaciv/v0ubxROW3/6unkb1yValf++AITvzFpBnft
z36CmAm7vfHn8aveLXkvIv/dxvgMg2blksW//5t+NHF1zPWwg5XE85XKucHu
7ycTf3TT0gNsOzHow7HnRi1hU+qHDPPDeyv4zy8mb3xwY/LP5IJPn1688HH9
hxHh5ViTRf6lPPl55ZX3n/8q8cw1qrPGHb1+9Xz1ztjnW9tfbW/9cXL0uady
Nl3ktzYnZ7+ouGU86Vh76n6dP45enmAuLT4zj3k5hv9En8yWTkFEvoHYp6aL
fKOD6PUWPucPLgz8xmzW7ec30A/QjXVy9xsrV288p9XwcuzqTyfBW/N9ck5F
/vX+9lj/J5PPrQ7nL2bvzN57Vm2d8btX++Ufb43LiJkcmC2qzauX8ujC9Yvx
y/2KR0v+2b35euJJHJUMmi8P6le/HcRj5E7G9devNtYH+j+z6fzu56P9C/J2
tXH9zf5+6au83I8F5CfG4Hq18evRe8ro6C8G+p+Oe7qd16cg8t9tzy70m+4X
k/3n/zEw8Hyj6mFV7ujVH+5d+gHDmP+hgd96mkE035L/y7N7PxuUrX71bzYS
8wNj21Udd6/+ul9u/d8NYkveNN3zK5OfkRDKC/LgKH68e3qXYX92vsmWfMOD
CB/y1/LtP/+UWPJ3fk8/wVXxizujvxwfxROuXLMXa4CanFeRf2100Y9ND6HR
OT06bF/tYJuKBJCfvC96EfmD2QEsU/NPy1f5HRZ5VD3M+9XG84F+c+EAK/y9
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
FwMA3mP+D1qrBss=
    "], {{0, 191.97600299962505`}, {377.20284964379454`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{377.20284964379454`, 191.97600299962505`},
  PlotRange->{{0, 377.20284964379454`}, {0, 191.97600299962505`}}]], "Text",
 CellChangeTimes->{3.910968725272388*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"1061610a-276a-445b-a838-8d37f9a7dd76"],

Cell[TextData[{
 "Not hard to understand why we pick n = 13 (I think n > 13 worked is simply \
random in our case, But n =13 is surely work). Because our problem actually \
is convert a value in form of 13 digit systems to decimal (10 digits system) \
\n\nTo go deeper a bit, anyone used to learn some 101 course about computer \
science in university (hum, not me). Or read text book (I actually obtain \
this experience from the text book, I remember that book name \
\[OpenCurlyDoubleQuote]Code:...\[CloseCurlyDoubleQuote], it ",
 ButtonBox["here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.amazon.com/Code-Language-Computer-Hardware-Software/dp/\
0137909101/ref=sr_1_6?crid=14GBL5RYFIE9B&keywords=computer+book&qid=\
1701977928&sprefix=computer+boo%2Caps%2C339&sr=8-6"], None},
  ButtonNote->
   "https://www.amazon.com/Code-Language-Computer-Hardware-Software/dp/\
0137909101/ref=sr_1_6?crid=14GBL5RYFIE9B&keywords=computer+book&qid=\
1701977928&sprefix=computer+boo%2Caps%2C339&sr=8-6"],
 ", we will know that human have way to convert the between two type of \
numbers, binary and decimal. 2 questions will rose here:\n\n1.Why these \
methods work?\n2. More important, why we need these methods? \n\nWell, I \
still not know the answer of the first, so I will focus on the second. Most \
of the answers will be... because computer using binary, not decimal form of \
number, ... hum, seem acceptable, but bold, because I am human, why I need to \
care about computer. \n\n I try to go more generalize, human perspective \
always recognize the definition of values, even before they invent number \
system, we always try to give \[OpenCurlyDoubleQuote]something\
\[CloseCurlyDoubleQuote] a value on its own. But the problems is, different \
people, and context, and culture, civilizations will have difference way to \
\[OpenCurlyDoubleQuote]value\[CloseCurlyDoubleQuote] everything. That why we \
need, always need, try to find ways to convert a values from \
\[OpenCurlyDoubleQuote]context A\[CloseCurlyDoubleQuote] to a value in \
\[OpenCurlyDoubleQuote]context B\[CloseCurlyDoubleQuote]. I think, even the \
sins humanity have no  boundary, at least these method will help us lower the \
percent of... ah, uh, dumb-ism actions. "
}], "Text",
 CellChangeTimes->{{3.910966604296164*^9, 3.91096669226257*^9}, {
  3.910966752944167*^9, 3.9109668307378283`*^9}, {3.910966922855419*^9, 
  3.910967282683179*^9}, {3.910967320620042*^9, 
  3.910967799948056*^9}},ExpressionUUID->"09bfc543-ec81-4710-b6ea-\
74438134b225"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9109670003681927`*^9, 3.910967003293734*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"aa584707-0b8c-4675-a6e4-26b3b70079c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 2", "Section",
 CellChangeTimes->{{3.910934831294876*^9, 
  3.910934834836945*^9}},ExpressionUUID->"ea79663e-cd09-4566-b83f-\
44841d6132b3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ZrOrrR5fNBgIYeOTjh67JZDLV6a8alK5c8vzJTdCOJkj3FUGW5FAmWHsUvVR
2elCtGft5mSLryymSopBZGivsZD4IJ2uJuRqodAF7ZtcuJp7Le/0syuXgnVN
rRSrptXzp7l5PjvaT71NOFvr69Pum1hTBVufT1Gudcy13tJ1MhkTgleP7OyZ
TGZOouucvM3J4+dT9EjrBlxyhZTdOZ6hnBtQwjxbuvxM7Ehdc8Mgdxw9Ts6u
RTWBQ7NOaWGwDtW0vQujXptsLx0m3jzV1ICMlseaaqq6bJkvQELZkliTPUjh
+vIT5VUTcNmZSpUlpLZ21dSCZVMysaYmd5jGRY//pS5exs1pxnPpE2JvJb/o
qdmOZZjRNQwmclVhxNIMLm419TBN9FeoJgUjZDE4IpRHs0vVnyBO1DK3SmwS
G6maHEnaU2FUsgkqt36NNCK22QVygG8jxJOkR0XByaIEXUusqRbYWFOpjNFM
5Eh3Mda0VnPSz+TKYk0ldrKxqkl/ij7TV5QlRlZL1PGYL72GbmtPkEk6nlyH
atoCUqiY15Q5Xcd0681STa2OeGqsdR0JGk/Tp0vDa1wbrb+ER1592488sQGX
vH2ISo2JFw5sH8msSyiWq6aDJzNQNd2rNA0RKay8r5bXP6C/yk4Inkind1OL
8+tVTTrnGeqV53QVywfy1tLsDs7XNEuhhLWpJnYiUzY+JpoBrlOrq47sIB4q
FzQX5zWNpkrnNQExRtGu5rKz5FUTO5Ullx4vzthpUBnUwi/rUE3s7OgF0l0M
Pqja3BYjd10tWJoqTvhRd2DkheqqiT1rPoQWfqY247lzBdXUbHf0iNfsGxzx
HGasUkKVyW3Ti+pZZQ8ypTKsU2I5p5IR8hhxIjA0Go8qmJ80G6mauGGmnnIr
kk9QsfVlQS39do2oxjTDhcEyYDCZhEVIocXpzSyRVVVTIzc9TzwDXG2ofr3N
bmKecmiEvMaIsnlNazWnFnZmlE1T/LG6WTRfS1k11dxj8F1Q+8sZIbiUDz3R
Scc2URfU2O2JiebSK6ZWrprYuVKx7JlSGaYdClLUqKlKD1PsIT2p7Ms9BV3X
euSVtwln6Rq6NSZYVTWpe3AyiVuqPUgWEtyhQ4ovQ9C5ktlXymXn2hLcNhDO
nDm0vVgw3XCGHt8nSlCHjlMkPqQwb1bqklvHMpmhbZKqaa0J7gCtELYXwlZb
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
4jVZOPXUzXpTJRPSYDVNIt8L/XH69OvyKKbX0X+RkDs/SN37pTh9cQLpOkU1
IZ3TOK6prttRkStKmihBdBcknJSr1EuU85WIlvPV9376SPSekwJu6Col8+gq
RbyhXKFbv/LKUE/PJaezIizR86ILlZyjH5XbnTnTj46i31GJvfQSgc5HJfza
a6MDqcePvjONTkAXopygAgHVdKA4Ktsg5lmOXiZpjWqSdkjMKNtfcvkMpe6q
6ZiikqtpZmN7i8+hPyQokrBZXCUdmpY2FbWPUTTLS1u4FlI+6avT6cvwiYUc
wwoiS44H0+hQeSMnH0L3StHrzXs6HItcYoAYX5L3/WSFMkepedjZVdLRyRST
zdFZ4daD3zz4gEcphAfNlaG8MVO3P7wqJZgviMWVYG0XXbs/TMlFIR0S6CBR
uyqbG+/2R1e5JldhQwFK3hkZldJqPJptQTXhkQSqBfbO1m2eVmpkNR3CpUP2
WZ6Z1m1sapvKMVdkf4vNMGzcM5+mM3LmeT4xpvHDnUOBlUo9Mqx+V+Jj8mbl
G48elmKtSiBsNESlk2vig8f382v1NmMfoRhlU1pkFSv6jX2b24wFRkaIDaeK
q0F1K+TxVZ7sr9YvRozL25LKzyvk1Rrp8NPZlFSPhc3iUtC3jI6KIlt5cGRO
yemItCuxfFVxPVa/92hz1eQm5tOMvGMpk+WTOx3fVVFNrnfK7FsntRKo/7p4
Y+LETlXT6bkSP9erPepcvMm9fbbJVadjfPatE5aqqdMbXsspr2R+8w6t2/P3
jG04zrDy5q2rkim2sCmttEEzs0C4plO0vOdvscSF8dp72tScXLWNcQnyA3Xf
ZyLKtfCd2OUNr6pbgWvrC9VjbWNfbT2a+ZkOAr3gknGiFwEVi8bgTRyXtAfu
XE7auznL5zPp8LKgUU3G5tQxSmbiDht6+yQPn+cEZn7U+qqWXZCiLpCSQdJi
NL7x0YefbP/n//e/f/Xzez/52d0PP9l470+RAEAK4dxk5oc/+82nHz/46cdf
fPHxrbh3tKdnEB1y/dm9X/79nyJVoARYTp0JFn75k3/38nkkM5A+efmbpZ/+
KE58+/2NrS9+/skvtz99/Hcz/Y2Dt6tdY71Ik6AL3d4bP9z+tXKvh1s/+vfj
HkV3vYz/JftPH9+7/8f//v/977/66c9RVm9vlmbP4UhrNcqw6uhxlOYbU+/8
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
dGu6hl8lvvP4y+8MIp05eH37D/ejb1yWJRP69/Lg9S8ffSfgbNZRCOw73WRx
I0VU+6Fsw5R4uzquqTuSF9Lj9trJti594zVY57isrzrqqqmFcH1j5g31D/JX
JU1QvdsfLd3PW6qmjiFyQ4yqXQzdweStO62qps4ZpmAQH8P8iWzct8wn+vWF
c5v3qaEnB6q7FKHkqmMoyoukdgS4za0vWycxz+WpvRjXNJgqczFH1bHbxnLl
rG5cU7uqydQIpe45ZbyWbSStGRl+xrMuJnC1ZAgftXmrJdW0KepHtuSv6E0I
Xc7rdZQ0hkQszg9p5Kvbpg+P2EaoPEt5rHR7bQ7d+zdpb1XVPH/pakmdQ3f2
8vI139nqMKT+a2Kto8340ImRpFAIOKuKyBXjS++oo6RO9EVo9ppmLYLdqaYu
r29EO8Xe7cuKlvEfY9Vkak59qXwmVxnRZCeZtTSz3kLHKOZNbgi60ebDQeWT
yrUoFhdHNUODxOKcOq7J0M+4xmZ0X2Q99T1i8vl1jsvpWd3MB2tjjQLstjqu
ycycjFSTyVVtuiB1Gp2ymtBA5vOfLA0q88Lk6Wz9zkvv/fSrB+/9SWWs0YWp
3Ge//2T5DfT3m32j33n8m3/41vlRJG9w/N8ufvez//JfPl7AkWy4hHTOy98s
PfzkvV558j7SBuoa2nUZ0I1rGtTdq9/HPPhq6y/6B5XJdN3d57t7yX/6GT98
tvk8ODVBJdaEHuf8e7/67fdCUmei1DX29hzz+f/6hx9MvlKbfNc4vAqpo55z
ax9/+X3/gBRYQ4/25rtbDz9YftWOf+MbryrLKUjLLvVc/9nD71w8e+HMmX5l
NLiX/9W9vxxWZxq+jLNfPPrb/r43+/om/uLD//Y486eKFHx9aCHz4P/8Q/7b
6DT5KaRxWScIqrwpRHHDagL2EMk/80I+w9EZLjkXJLOaOXSumURWnushzelA
R+tG5OLjK3yRVWYqpQJ91lcdddWEeRMf3C+zfJ6V54+sp8krXitVYNZDJ5Ut
h9KRJgcll2ZwJeBjdZU0q5ETlAk79ErEt8JZNyLq003npDtKE8Fy5KSuAO1z
4oOSXlNhM0wpHV6Rp/lk+XxWN+HxWOdoSJ43pNQjQ0X0s8PwUOk3X//LnWh3
q3mTMFh5wD6mmfRE1c2ha181GRqh07XAa/sZ0X/zs7ViT7K8VFlr6eRKfHwg
XmlezVXTopBfjiczlVlUdLPZcK5ZrsxLT0fHZ6rP7iYW5LlX6/IUxUyqbrCu
a+nOr7/+fTloMS5at17Tu6y0tlKhwLH69ZqcbyWUlZe4Upm7dlmrdkwOnZ26
mpV+l9aAel+zXlMfKf7i0/L7Gfp6lffeuXx2V+Oa8CuppNpPhCrrSgszCo1V
k5k5oaq8p86eGyI/eNSqadn90XW+MlcOvRG1uQnVelRqf25UdTUmfgbrCUYp
TffxOqVV+NXzG0OUQ4E1oajca43yXckxc5o5dEbmZKiaTK9qxwVpZ5whPfDa
+mcfxvqV9QSUZY66u/vdvtq8ti9+duuvJkaUwTw9PSPB93/+28dfbH38YOv+
3dxCOLu1Nf/qxbOyljg9xH++RZ3tOmcUFFKon0OnudfD7R8tjw2jH+UlDs51
dfW9+NJf/OiT71209ylDpJpGabQJdrvnrn8opfbxTz756MMf/83V5M2tf5xw
XlDkivZytRCkBdLl9ZrGXZeUtQVeemnore99+eG7k/KC3r3KUlRdZ1OffP63
509J6zKh7CEZ9s3C47sLhLIZjTRu3MX88mGuTyqlS6/0//mNj3776LMvtj75
dOujW9fSD37O+pTFppSSOeH9m62H28lhWAsIOFDwJU4/9R73UJuVHqsnH/sV
rjYmXAGTYlPtBYt0uEMFIfRsr1jYMK5p71JeFBt7wOuoXxv8xEiiVJhxnaqL
Au0cV4wvkK+fbOlkWK/pmUVdEFLZure6Engv4oUX3I1rKCnrNSHQH/KKTITS
SyUv5dSv7BCHrlL3DbHcKs5ovSY1NZSNF15AGXPJKItvG6apRs+QJqn0pkk9
aINKNx/6r7oot1bIaZd4UuSistsdkkDKepXK5inVtcpfUfY4Vlb7lJerqqxm
qaxepax4qWyZJ69b1Y9KCQkwZSknk2WjAOAAcYdYXq8B8PF1ITGwH/c6cLqC
NEfVb9DQMK6pLTCcKmqWCHg22S/VZPMn+bQHszityY4qpydi16UVwpnFpus1
tc3J/khSWiGcTXh7zc8E1fTMot18RAE15TJORUopa2I3rA2OeFVZ/VtZr0kR
S9Xd2XoUjaGkZr78dd0ecNq1wZUVxZUNXJS8qZviGaWpPg66uyqB1Byi/yLN
07gBXN0OLMrGKJrtUXqr93Vq94upQ90CRtkFRlZWr6gKSpsNoyXKAeBA6ZlJ
rOeSVFqBXktHhw9o9d39wzZCSf0UTRZs2ZVqwgZIZo3ErVdmeMrZF9Vk85PZ
dKDHOsj55O1DBzylqDvBNWK0N5wiY5TfVXWhCAZFXSi72aobz5mrJqN96JTd
61BSddkzT7NxEzptDi23w1M21FOko9FuvAooY+ofDfvxSSkopaTux9dKNgAA
AICmIKFypDj0AgEOEUWENKIVElrxoMqYukPod4W6dFq5e9N7KUk1JmieplYH
Nk3QKE6l5qQRkyLSXqX9sfpEDlVHtZINAACAFvkfLtw24tDzBgDPIEZSwfzQ
nt/riCT4RGcDAICnD1BNAAAAAAAArQCqCQAAAAAAoBVANQEAAADA3tMdjK7J
60+upsPDu96XFjgsMMK3LC9NuZpOzI7+j6CaAOCI4sSvpOj1HHpVk/GIy2ov
GwAAjhAdQ1GOUzcTwawWxtlr6tcGB3YMsSIkRyqiF8Oc5rGm/VuUsgn9qaLF
Xn5uH/fowbr/kMuww09vP8pP7edqrrtbGQw4AI/Rxn6XOwWbyBXV7Yc6dmFv
YE7AITKQrmzsXkXajWuf350jQTeZXzuQ1qpjiFxv3EMEVNNeFe9ogqW0H61P
lGo6Y8OD4337v/h8cyNUcbrGgvi+rvG+m5XBpnLVfYiOKJ61XGjfFy57GlST
Z50PN+4dY46dpFcadiQH1QQcIs+sanJReasWbW/o8DbbeQ35QB5U014Ub/3G
dk+WajqoUmpqhAfIblTTFZ450qrJOZ7lD0Q17a/H2H/V5PSx7T9CTzxPgWoC
jhKmqsk+otkEc6WyCaar1u4Q5AfqVphElKts+4v1zCQyypa+XD6jbgjrHF8X
oj3auzvH1/hwdcFqg6vkLK1xIZubmM/Ja1zzxbXIrvx/XySxmqb57a+2RWVQ
U3IxWH0Bpbuoe3Em9Tuxtp2NTm+YSifXhLtbm4xyo9V0YkrZK9YZKvCBbn94
Vdo5N18QiytBjRNAd0kz8ra5TLY+G81BboSNe+bTdEZOkOdrG+oNpotLQ5qT
h8hCWt2gWdr5nfLKhc/ns3y+wJPK/o8mCSqVJe32K+/5q6ssJz6Xy2elPUmT
q9K2pD5NjZtUsQlNjVDO4WhIKl7xweP7eXlQU5IiCZuValrk6Ssz5Jq8XSkr
FNdj2p2CTarYPhKnlX1OMzyzMuOoZYMYX0jL2yVLCea19ahTTU58nssvKbu+
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
AAAAAAAAAAAAAAAAAABgD/n/AdA3qDY=
    "], {{0, 197.22534683164605`}, {589.4263217097863, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{589.4263217097863, 197.22534683164605`},
  PlotRange->{{0, 589.4263217097863}, {0, 197.22534683164605`}}]], "Text",
 CellChangeTimes->{3.910968741976836*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"d3b3a8d5-a212-4cb1-9f2b-8c00c9601fb0"],

Cell["\<\
\|01f602 . god, he know how to make thing more messy.  Let we write the rule \
out here to make clear of our mind. We have 2 new rules: 

First, in grouping phase, if  J cards exist will \[OpenCurlyDoubleQuote]count \
themself as\[CloseCurlyDoubleQuote] other type of card (character) how try \
make  hands that holding them increase to highest rank as much as possible.  \
The only exception as JJJJJ. Like the tree of logic we implement in Part1 \
will growing more branches\
\>", "Text",
 CellChangeTimes->{{3.910947293931759*^9, 3.910947499680852*^9}, {
  3.910953778854968*^9, 3.910953839009457*^9}, {3.910953871553895*^9, 
  3.9109539025896263`*^9}, {3.910966144472073*^9, 3.910966238360621*^9}, {
  3.910967821299728*^9, 
  3.910967824667519*^9}},ExpressionUUID->"cb64e881-a12d-4b41-80ce-\
326cd1376a7e"],

Cell["\<\
Second, in ranking phase . \"J\" is itself, and act as lowest value card. \
This is easier. 

Let \[OpenCurlyQuote]s implements. I actually rewrote the below code 2 times, \
change the way to implement the logic from checking number of J first -> \
split the branch  based on the init cards count \
\>", "Text",
 CellChangeTimes->{{3.910947506003134*^9, 3.910947592778607*^9}, {
  3.910953272197299*^9, 3.910953346271103*^9}, {3.9109538474654284`*^9, 
  3.910953870291542*^9}},ExpressionUUID->"38c73316-81dd-4b72-8f44-\
b9eb221c3586"],

Cell[BoxData[
 RowBox[{
  RowBox[{"groupinPhaseFunction", " ", "[", "hand_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"cards", " ", "=", " ", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"hand", "[", "\"\<card\>\"", "]"}], ",", "\"\<\>\""}], 
       "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Counts", "[", "cards", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", " ", "=", " ", 
      RowBox[{"c", "[", "\"\<J\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {"7", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c", " ", "//", " ", "Values"}], ")"}], " ", "==", " ", 
             
             RowBox[{"{", "5", "}"}]}]},
           {
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {
                   RowBox[{"7", " "}], 
                   RowBox[{" ", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], ",", "j"}], "]"}]}]},
                  {"6", "True"}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", " ", "//", " ", "Sort"}], " ", "//", " ", 
               "Values"}], ")"}], " ", "==", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}]}]},
           {
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"7", 
                   RowBox[{" ", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], ",", "j"}], "]"}]}]},
                  {"5", "True"}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", " ", "//", "Sort"}], " ", "//", "Values"}], ")"}],
              " ", "==", " ", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}]}]},
           {
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"6", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], ",", "j"}], "]"}]},
                  {"4", "True"}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", "//", "Sort"}], " ", "//", "Values"}], ")"}], " ",
              "==", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "3"}], "}"}]}]},
           {
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"6", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", "2", "}"}], ",", "j"}], "]"}]},
                  {"5", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "j"}], "]"}]},
                  {"3", "True"}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", "//", "Sort"}], " ", "//", "Values"}], ")"}], " ",
              "==", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}]}]},
           {
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"4", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], ",", "j"}], "]"}]},
                  {"2", "True"}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", " ", "//", " ", "Sort"}], " ", "//", " ", 
               "Values"}], ")"}], " ", "==", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}]}]},
           {
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"2", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "j"}], "]"}]},
                  {"1", "True"}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", "//", "Sort"}], "//", "Values"}], ")"}], " ", "==",
              " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
              "}"}]}]},
           {
            RowBox[{"-", "1"}], "True"}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False,
      StripWrapperBoxes->True]}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"7", " ", "xxxxx"}], ",", 
     RowBox[{"6", " ", "xxxxy"}], ",", " ", 
     RowBox[{"5", " ", "xxxyy"}], ",", " ", 
     RowBox[{"4", " ", "xxxyz"}], ",", " ", 
     RowBox[{"3", " ", "xxyyz"}], " ", ",", " ", 
     RowBox[{"2", " ", "xxyzt"}], ",", " ", 
     RowBox[{"1", " ", "poor", " ", "hand"}]}], "  ", "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.910939207017632*^9, 3.9109392465775013`*^9}, {
   3.9109394866293573`*^9, 3.910939527847069*^9}, {3.910939774011421*^9, 
   3.9109398064441013`*^9}, {3.910939841548888*^9, 3.910939850444977*^9}, {
   3.910939897045938*^9, 3.910939918750307*^9}, {3.910947598865982*^9, 
   3.9109477435389633`*^9}, {3.91094779671647*^9, 3.9109478207436733`*^9}, {
   3.910947892814597*^9, 3.910947908734625*^9}, {3.910948058456327*^9, 
   3.9109481043742847`*^9}, {3.9109481589177322`*^9, 3.910948180255885*^9}, {
   3.910948406388644*^9, 3.910948422636304*^9}, {3.910950699535097*^9, 
   3.910950727816352*^9}, {3.910950758857359*^9, 3.9109507683930597`*^9}, {
   3.910951019191642*^9, 3.9109510473603773`*^9}, {3.910951580788054*^9, 
   3.910951586819089*^9}, {3.910953232178656*^9, 3.910953262631651*^9}, {
   3.91095337173685*^9, 3.910953468451138*^9}, {3.910953517366106*^9, 
   3.9109536773482656`*^9}, {3.9109537583373203`*^9, 3.910953765488916*^9}, {
   3.91095390770072*^9, 3.910954002118658*^9}, {3.910954044472972*^9, 
   3.910954121864972*^9}, {3.910954169777604*^9, 3.910954250467372*^9}, 
   3.910954284270135*^9, {3.910954315653471*^9, 3.910954566542734*^9}, {
   3.910954643539877*^9, 3.910954762030796*^9}, 3.910954798994527*^9, {
   3.910955011268414*^9, 3.910955016802807*^9}, {3.9109563434424*^9, 
   3.910956359001143*^9}, {3.910956415371751*^9, 3.910956494743594*^9}, {
   3.910956633292549*^9, 3.910956658251795*^9}, {3.910956743446542*^9, 
   3.910956781930997*^9}, {3.910957737260084*^9, 3.910957743504428*^9}, {
   3.910958428871355*^9, 3.910958636142668*^9}, {3.91095873114509*^9, 
   3.910958745249045*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"222f3530-275c-4322-8d67-985a4666deae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"handsGroupWithJoker", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"GroupBy", "[", 
      RowBox[{"hands", ",", 
       RowBox[{"hand", " ", "\[Function]", 
        RowBox[{"groupinPhaseFunction", "[", "hand", "]"}]}]}], "]"}], " ", 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Keys", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9109548351667147`*^9, 3.9109548365864773`*^9}, {
  3.9109568720499268`*^9, 3.910956887940013*^9}, {3.910956920938884*^9, 
  3.910956950410145*^9}, {3.9109572076422663`*^9, 3.9109572464186583`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"8f1b9893-eea4-4bf5-a2ef-3ded44feef30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"convertHandToValueWithJoker", "[", "hand_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"card", " ", "=", " ", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"hand", ",", "\"\<\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"cardValues", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", " ", "->", " ", "#2"}], " ", "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<A\>\"", ",", " ", "\"\<K\>\"", ",", " ", "\"\<Q\>\"", ",", 
             " ", "\"\<T\>\"", ",", " ", "\"\<9\>\"", ",", " ", "\"\<8\>\"", 
             ",", " ", "\"\<7\>\"", ",", " ", "\"\<6\>\"", ",", " ", 
             "\"\<5\>\"", ",", " ", "\"\<4\>\"", ",", " ", "\"\<3\>\"", ",", 
             " ", "\"\<2\>\"", ",", "\"\<J\>\""}], "}"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"13", ",", "1", ",", 
             RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cardNumbers", " ", "=", " ", 
      RowBox[{"card", "/.", "cardValues"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "*", " ", 
          RowBox[{"13", "^", "4"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", " ", 
          RowBox[{"13", "^", "3"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"13", "^", "2"}]}], " ", "+", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "*", 
          RowBox[{"13", "^", "1"}]}], " ", "+", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], " ", ")"}], " ", "&"}], " ", "@", 
      " ", "cardNumbers"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.910956971138722*^9, 3.910957138155654*^9}, {
  3.9109590071942587`*^9, 3.910959014256771*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"630d0414-3227-425b-861b-9b34c4ef6530"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsWithRank2", " ", "=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<card\>\"", "->", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<card\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<bid\>\"", "->", " ", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<bid\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<rank\>\"", "->", "#2"}]}], "|>"}], "&"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Values", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", 
            RowBox[{"(", " ", 
             RowBox[{"hand", " ", "\[Function]", " ", 
              RowBox[{"convertHandToValueWithJoker", "[", 
               RowBox[{"hand", "[", "\"\<card\>\"", "]"}], "]"}]}], ")"}]}], 
           "]"}], "&"}], " ", "/@", " ", "handsGroupWithJoker"}], " ", "]"}], 
       "//", "Flatten"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "hands", "]"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.910957178041854*^9, 3.9109572172558203`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"37521150-c975-485d-ba6c-131b98be02a7"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"23Q7A\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "878"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"25Q47\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "739"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"26T7A\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "345"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "3"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"27T34\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "134"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "4"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2897K\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "321"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "5"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2935K\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "543"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2T476\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "90"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2T6Q5\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "559"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "8"}]}], "\[RightAssociation]"}], 
         ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"2Q695\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "273"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "9"}]}], "\[RightAssociation]"}], 
         ",", 
         TemplateBox[{"982"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"99J99\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "69"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "992"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"TTTJJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "693"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "993"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"TTTTJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "399"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "994"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"QJQQJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "918"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "995"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"QJQQQ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "434"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "996"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"KJJKK\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "611"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "997"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"KJKKK\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "190"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "998"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AJJJA\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "697"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "999"}]}], 
           "\[RightAssociation]"}], ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"card\"", "\[Rule]", "\"AAAAJ\""}], ",", 
             RowBox[{"\"bid\"", "\[Rule]", "738"}], ",", 
             RowBox[{"\"rank\"", "\[Rule]", "1000"}]}], 
           "\[RightAssociation]"}]}], "}"}], Short[#, 8]& ], "line" -> 191, 
   "sessionID" -> 25339849786080793839, "byteCount" -> 568192, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.910957229030089*^9, 3.910957249661113*^9}, 
   3.91095875833959*^9, 3.9109589367831697`*^9, {3.9109590185204144`*^9, 
   3.9109590476732273`*^9}, 3.9109682583459587`*^9, 3.910968659948897*^9, {
   3.9109687502404213`*^9, 3.910968788034087*^9}},
 CellLabel->
  "Out[191]=",ExpressionUUID->"da4944da-ab4e-477f-8e61-1aca801d87c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<rank\>\"", "]"}], "*", " ", 
     RowBox[{"#", "[", "\"\<bid\>\"", "]"}]}], "&"}], " ", "/@", " ", 
   "handsWithRank2"}], " ", "//", " ", "Total"}]], "Input",
 CellChangeTimes->{3.910957277296648*^9},
 CellLabel->
  "In[192]:=",ExpressionUUID->"5c15c61a-0ab3-47e9-85a5-ff06d21e9669"],

Cell[BoxData["248747492"], "Output",
 CellChangeTimes->{
  3.910957277988929*^9, 3.9109587585131483`*^9, 3.9109589369677067`*^9, {
   3.9109590201828814`*^9, 3.910959047794236*^9}, 3.910968258446268*^9, 
   3.910968660055533*^9, {3.91096875037632*^9, 3.910968788171067*^9}},
 CellLabel->
  "Out[192]=",ExpressionUUID->"1b636423-be19-4d7a-8286-d70a55fe7a13"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratchpad", "Section",
 CellChangeTimes->{{3.910929798134862*^9, 
  3.910929804431958*^9}},ExpressionUUID->"72535688-3b1c-48bb-acb7-\
b0184f030bc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\<~/nhannht-projects/aoc2023\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.91096787838335*^9, 3.910967886151936*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"3f7d2ea5-afcb-4c34-8301-a335b50bca0c"],

Cell[BoxData["\<\"/home/vermin/nhannht-projects/aoc2023\"\>"], "Output",
 CellChangeTimes->{
  3.910967887429879*^9, 3.910968258478372*^9, 3.910968660092078*^9, {
   3.9109687504702473`*^9, 3.910968788225049*^9}},
 CellLabel->
  "Out[193]=",ExpressionUUID->"ff5d9343-28f1-44cc-ac01-7cad067edf19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<A\>\"", "\[Rule]", "2"}], ",", 
     RowBox[{"\"\<J\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{
    RowBox[{"#", " ", "==", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<A\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<J\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], 
      "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910939926600049*^9, 3.910939974422427*^9}, {
   3.910940033287772*^9, 3.9109400841925*^9}, {3.910940144681497*^9, 
   3.910940190594095*^9}, {3.910940224409993*^9, 3.9109402408030148`*^9}, {
   3.9109403412073402`*^9, 3.910940401976777*^9}, {3.9109404344024487`*^9, 
   3.9109404481910954`*^9}, {3.9109404950652943`*^9, 3.910940519288041*^9}, {
   3.910940615250853*^9, 3.910940629914526*^9}, {3.910940727069491*^9, 
   3.910940731484302*^9}, 3.910940851217722*^9, {3.910941037058077*^9, 
   3.910941044009891*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"3d5fd518-9c5e-4928-b058-228e61219022"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"A\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"J\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",\

 CellChangeTimes->{{3.910956511439817*^9, 3.910956539135004*^9}, 
   3.9109566682044363`*^9, 3.9109587586699867`*^9, 3.910958937116681*^9, 
   3.9109590479228*^9, 3.910968258511174*^9, 3.910968660127441*^9, {
   3.910968750569312*^9, 3.910968788285221*^9}},
 CellLabel->
  "Out[194]=",ExpressionUUID->"592c959a-764e-4d02-b324-2cc6883b8d20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"KeySelect", "[", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"\"\<A\>\"", "\[Rule]", "2"}], "\[RightAssociation]"}], ",", 
      RowBox[{
       RowBox[{"#", "==", "\"\<J\>\""}], "&"}]}], "]"}], " ", "//", " ", 
    "Length"}], ")"}], " ", "==", " ", "0"}]], "Input",
 CellChangeTimes->{{3.910941060602054*^9, 3.9109411287629766`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"8b3cdace-62d4-44c7-b2a1-8d44d711cdac"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.910941065189447*^9, 3.9109411291273737`*^9}, {
   3.910956511536518*^9, 3.9109565392262783`*^9}, 3.910956668256606*^9, 
   3.9109587588330708`*^9, 3.910958937272643*^9, 3.910959048061871*^9, 
   3.910968258557069*^9, 3.910968660161593*^9, {3.910968750672056*^9, 
   3.91096878838422*^9}},
 CellLabel->
  "Out[195]=",ExpressionUUID->"b568ff67-7286-49c7-9788-c782eeb75a9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
   RowBox[{"\"\<A\>\"", "\[Rule]", "2"}], ",", 
   RowBox[{"\"\<J\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Input",\

 CellLabel->
  "In[196]:=",ExpressionUUID->"e481c73d-ffc6-4692-ab8c-bc26c1bd7119"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"B\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"A\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"J\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",\

 CellChangeTimes->{{3.9109565116227703`*^9, 3.910956539282127*^9}, 
   3.910956668329402*^9, 3.910958758950901*^9, 3.9109589373432426`*^9, 
   3.9109590481931133`*^9, 3.9109682585887814`*^9, 3.9109686601898937`*^9, {
   3.910968750766107*^9, 3.910968788487438*^9}},
 CellLabel->
  "Out[196]=",ExpressionUUID->"7a9a7e89-6440-4a8a-ade9-36fb391462e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"j", " ", "=", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<A\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], "[", 
   "\"\<J\>\"", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.910953482394397*^9, 3.910953510514389*^9}, {
  3.910954931377378*^9, 3.9109549335210657`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"72ff94e0-500f-4d97-941f-20da96c29fe7"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"J\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.9109549339828453`*^9, {3.910956511725865*^9, 3.91095653935935*^9}, 
   3.9109566684363937`*^9, 3.9109587590900173`*^9, 3.910958937441972*^9, 
   3.910959048268757*^9, 3.910968258624384*^9, 3.91096866022435*^9, {
   3.91096875085852*^9, 3.910968788603836*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"796ba625-4a54-4055-b884-c1153a74c56f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MissingQ", "[", "j", "]"}]], "Input",
 CellChangeTimes->{{3.910954936234434*^9, 3.91095494275504*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"b8f6fb0c-dd63-48b8-b8c0-b06f663cac1e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.910954938731161*^9, 3.910954943143855*^9}, {
   3.910956511811961*^9, 3.910956539458529*^9}, 3.910956668526966*^9, 
   3.9109587592274427`*^9, 3.910958937670867*^9, 3.910959048334732*^9, 
   3.9109682586579447`*^9, 3.9109686602604923`*^9, {3.910968750975054*^9, 
   3.910968788702722*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"a2b3114c-a7a0-4fe4-b0f8-87d7462247e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<A\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], "[", 
  "\"\<J\>\"", "]"}]], "Input",
 CellLabel->
  "In[199]:=",ExpressionUUID->"709be6d4-dc12-43af-b104-70d6aad7fb7c"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"J\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.9109565118987827`*^9, 3.910956539555176*^9}, 
   3.9109566686253347`*^9, 3.910958759292416*^9, 3.9109589377636223`*^9, 
   3.9109590484551563`*^9, 3.910968258680184*^9, 3.91096866029431*^9, {
   3.910968751093045*^9, 3.910968788805911*^9}},
 CellLabel->
  "Out[199]=",ExpressionUUID->"31d3eaec-9181-423f-98e1-432bb8151cc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MissingQ", " ", "[", 
  RowBox[{"Missing", "[", 
   RowBox[{"\"\<KeyAbsent\>\"", ",", "\"\<J\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.910954023045492*^9, 3.910954033485558*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"80124444-526c-4131-9b78-ff04d0016c76"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.910954025999936*^9, 3.910954034161977*^9}, {
   3.910956511987721*^9, 3.910956539644133*^9}, 3.910956668727186*^9, 
   3.910958759369156*^9, 3.910958937896573*^9, 3.910959048574637*^9, 
   3.910968258713086*^9, 3.91096866032833*^9, {3.910968751187522*^9, 
   3.910968788914235*^9}},
 CellLabel->
  "Out[200]=",ExpressionUUID->"7925c9e6-351c-4da1-b455-2e12a925fe09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<A\>\"", "\[Rule]", "2"}], ",", 
     RowBox[{"\"\<J\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], "[", 
   RowBox[{"[", "\"\<B\>\"", "]"}], "]"}], " ", "=", " ", "2"}]], "Input",
 CellChangeTimes->{{3.910950854505506*^9, 3.910950866393991*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"0ffcacaf-8fe6-480e-abaf-749c50058069"],

Cell[BoxData[
 TemplateBox[{
  "Set", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"Association\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\\\
\\\\\"B\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"A\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"J\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"2\\\"}]}], \
\\\"]\\\"}]\\) in the part assignment is not a symbol.\"", 2, 201, 5, 
   25339849786080793839, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.910950866948208*^9, {3.910956512085453*^9, 3.910956539888172*^9}, 
   3.910956668865466*^9, 3.910958759500003*^9, 3.910958938067184*^9, 
   3.910959048697702*^9, 3.910968258811315*^9, 3.910968660363769*^9, {
   3.910968751263987*^9, 3.910968789015361*^9}},
 CellLabel->
  "During evaluation of \
In[201]:=",ExpressionUUID->"df4bf890-19a8-42ef-b8ec-e05024f05592"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.9109508600886297`*^9, 3.9109508669731693`*^9}, {
   3.910956512132183*^9, 3.9109565399363194`*^9}, 3.910956668915716*^9, 
   3.910958759563848*^9, 3.9109589381345243`*^9, 3.910959048764577*^9, 
   3.910968258858369*^9, 3.910968660384243*^9, {3.910968751323271*^9, 
   3.910968789067075*^9}},
 CellLabel->
  "Out[201]=",ExpressionUUID->"2fd1d0d2-e227-4936-a7e0-975a8940e5ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeySelect", "[", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<A\>\"", "\[Rule]", "2"}], ",", 
     RowBox[{"\"\<J\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{
    RowBox[{"#", "==", "\"\<J\>\""}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.91094100837116*^9, 3.910941030457369*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"d30d353a-a476-48aa-ae3e-b49b68fdf311"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"J\"\>", "\[Rule]", "2"}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.910940158440749*^9, {3.910940225835896*^9, 3.910940241283353*^9}, {
   3.910940345529809*^9, 3.910940402765443*^9}, {3.910940437908794*^9, 
   3.9109404485867767`*^9}, 3.910940520166972*^9, 3.910940630965304*^9, 
   3.910940732148555*^9, {3.910941018534025*^9, 3.910941031072957*^9}, {
   3.910956512221301*^9, 3.9109565400075617`*^9}, 3.9109566689793043`*^9, 
   3.91095875964902*^9, 3.910958938211759*^9, 3.9109590488945923`*^9, 
   3.9109682588897343`*^9, 3.910968660418572*^9, {3.910968751422385*^9, 
   3.910968789159477*^9}},
 CellLabel->
  "Out[202]=",ExpressionUUID->"085ae257-da13-47f2-9540-c11f9a9b62c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<B\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<A\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<J\>\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}], "//", 
  "Keys"}]], "Input",
 CellChangeTimes->{{3.9109404235502157`*^9, 3.910940424726346*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"84f6a214-d2b5-4b78-9476-11c43d51d6c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"B\"\>", ",", "\<\"A\"\>", ",", "\<\"J\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.91094042514052*^9, {3.910956512269948*^9, 3.910956540125614*^9}, 
   3.910956669071932*^9, 3.910958759784584*^9, 3.9109589383045883`*^9, 
   3.910959049029346*^9, 3.910968258958795*^9, 3.910968660457423*^9, {
   3.910968751527852*^9, 3.9109687892325287`*^9}},
 CellLabel->
  "Out[203]=",ExpressionUUID->"3f10573c-6ecd-446b-8bcf-b44907c8ad29"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.91094015842353*^9, 3.91094016127341*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"a419ef79-9754-4b82-92ff-2ad93d292318"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "inputExample", " ", "=", " ", 
   "\"\<32T3K 765\nT55J5 684\nKK677 28\nKTJJT 220\nQQQJA 483\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.910927614112*^9, 3.910927634893691*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"9e889c79-01d9-47d5-b1ab-964b1236357b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handExample", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<card\>\"", "->", " ", 
       RowBox[{"StringTake", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<bid\>\"", "->", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StringCases", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RegularExpression", "[", "\"\<\\\\s\\\\d+$\>\"", "]"}]}],
            "]"}], " ", "//", " ", "First"}], " ", "//", " ", 
         "ToExpression"}], ")"}]}]}], "|>"}], " ", "&"}], " ", "/@", " ", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"inputExample", ",", "\"\<\\n\>\""}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.91092764401562*^9, 3.910927660711905*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"52afccf6-28c9-45ba-8044-d61ab0033b9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"32T3K\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "765"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"T55J5\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "684"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KK677\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "28"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KTJJT\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "220"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"QQQJA\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "483"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.91092766100811*^9, 3.910929302022965*^9, 3.91092936362941*^9, 
   3.910929593321726*^9, {3.910930108266828*^9, 3.910930133188553*^9}, 
   3.910931234018868*^9, 3.9109314191390057`*^9, 3.9109317802294283`*^9, 
   3.910932539324996*^9, 3.91093261139048*^9, 3.910932998182022*^9, {
   3.910933031725628*^9, 3.910933070971499*^9}, {3.910956512342814*^9, 
   3.910956540240205*^9}, 3.910956669172385*^9, 3.91095875992855*^9, 
   3.910958938386423*^9, 3.91095904915665*^9, 3.91096825903976*^9, 
   3.910968660516869*^9, {3.910968751640587*^9, 3.910968789351911*^9}},
 CellLabel->
  "Out[206]=",ExpressionUUID->"5aa846f9-50ec-44b3-a880-e826e799e2ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsGroupExample", "=", "  ", 
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"GroupBy", "[", 
     RowBox[{"handExample", ",", 
      RowBox[{"hand", " ", "\[Function]", 
       RowBox[{"handGroupingFunction", "[", "hand", "]"}]}]}], "]"}], ",", 
    "Keys"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9109276817908907`*^9, 3.910927691025847*^9}, {
  3.910929811702272*^9, 3.910929840037353*^9}, {3.9109298810621243`*^9, 
  3.91092994556667*^9}, {3.9109299831427393`*^9, 3.910930003561242*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"183ed227-a978-4079-b092-e24cee73d20b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"32T3K\"\>"}], ",", 
       RowBox[{"\<\"bid\"\>", "\[Rule]", "765"}]}], "\[RightAssociation]"}], 
     "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KK677\"\>"}], ",", 
        RowBox[{"\<\"bid\"\>", "\[Rule]", "28"}]}], "\[RightAssociation]"}], 
      ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KTJJT\"\>"}], ",", 
        RowBox[{"\<\"bid\"\>", "\[Rule]", "220"}]}], 
       "\[RightAssociation]"}]}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"T55J5\"\>"}], ",", 
        RowBox[{"\<\"bid\"\>", "\[Rule]", "684"}]}], "\[RightAssociation]"}], 
      ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"QQQJA\"\>"}], ",", 
        RowBox[{"\<\"bid\"\>", "\[Rule]", "483"}]}], 
       "\[RightAssociation]"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.910929840426392*^9, {3.910929890446739*^9, 3.9109299233227777`*^9}, {
   3.910929988771092*^9, 3.910930003974032*^9}, {3.910930108370782*^9, 
   3.91093013328472*^9}, 3.9109312341599703`*^9, 3.910931282541243*^9, 
   3.91093141924747*^9, 3.9109317803860207`*^9, 3.910932539396124*^9, 
   3.910932611474299*^9, 3.910932998273481*^9, {3.910933031825486*^9, 
   3.91093307100985*^9}, {3.910956512456078*^9, 3.9109565403366013`*^9}, 
   3.910956669259522*^9, 3.910958760062799*^9, 3.910958938526401*^9, 
   3.9109590492945013`*^9, 3.910968259071103*^9, 3.910968660602153*^9, {
   3.910968751731284*^9, 3.910968789472221*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"93be01f8-458c-4992-9508-f06b07bf4240"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsGroupExampleWithJoker", " ", "=", " ", 
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"GroupBy", "[", 
     RowBox[{"handExample", ",", 
      RowBox[{"hand", " ", "\[Function]", 
       RowBox[{"groupinPhaseFunction", "[", "hand", "]"}]}]}], "]"}], ",", 
    "Keys"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.910957576486403*^9, 3.910957595967474*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"cecff614-5da8-4c13-a3ed-ea11c26fcfa3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"32T3K\"\>"}], ",", 
       RowBox[{"\<\"bid\"\>", "\[Rule]", "765"}]}], "\[RightAssociation]"}], 
     "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KK677\"\>"}], ",", 
       RowBox[{"\<\"bid\"\>", "\[Rule]", "28"}]}], "\[RightAssociation]"}], 
     "}"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"T55J5\"\>"}], ",", 
        RowBox[{"\<\"bid\"\>", "\[Rule]", "684"}]}], "\[RightAssociation]"}], 
      ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KTJJT\"\>"}], ",", 
        RowBox[{"\<\"bid\"\>", "\[Rule]", "220"}]}], "\[RightAssociation]"}], 
      ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"QQQJA\"\>"}], ",", 
        RowBox[{"\<\"bid\"\>", "\[Rule]", "483"}]}], 
       "\[RightAssociation]"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.91095765350259*^9, 3.910958760199567*^9, 3.9109589386642*^9, 
   3.910959049412055*^9, 3.910968259103387*^9, 3.910968660666155*^9, {
   3.9109687518443413`*^9, 3.910968789562971*^9}},
 CellLabel->
  "Out[208]=",ExpressionUUID->"a525be7e-7b34-443b-aa44-ffe81ad67105"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsWithRankExample", " ", "=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<card\>\"", "->", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<card\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<bid\>\"", "->", " ", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<bid\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<rank\>\"", "->", "#2"}]}], "|>"}], "&"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Values", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", 
            RowBox[{"(", " ", 
             RowBox[{"hand", " ", "\[Function]", " ", 
              RowBox[{"convertHandToValue", "[", 
               RowBox[{"hand", "[", "\"\<card\>\"", "]"}], "]"}]}], ")"}]}], 
           "]"}], "&"}], " ", "/@", " ", "handsGroupExample"}], " ", "]"}], "//",
        "Flatten"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "handExample", "]"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.910929835661161*^9, 3.9109298374116287`*^9}, {
   3.910931313305018*^9, 3.9109313362457933`*^9}, 3.910957614160253*^9},
 CellLabel->
  "In[209]:=",ExpressionUUID->"ff94d7b9-7d0d-4901-8d1e-ec6f91cd8088"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"32T3K\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "765"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KTJJT\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "220"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KK677\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "28"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"T55J5\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "684"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "4"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"QQQJA\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "483"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "5"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.910931336883629*^9, 3.910931419355112*^9, 3.9109317805507107`*^9, 
   3.910932539442335*^9, 3.9109326115133266`*^9, 3.910932998371209*^9, {
   3.910933031926242*^9, 3.910933071071328*^9}, {3.910956512542405*^9, 
   3.910956540428643*^9}, 3.910956669368333*^9, 3.9109587602758512`*^9, 
   3.9109589387911987`*^9, 3.910959049542663*^9, 3.910968259136222*^9, 
   3.910968660723337*^9, {3.9109687519462976`*^9, 3.910968789652693*^9}},
 CellLabel->
  "Out[209]=",ExpressionUUID->"1f4e7295-1c40-491b-8b2a-b9b70db0b5f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"handsWithRankExampleWithJoker", " ", "=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<card\>\"", "->", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<card\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<bid\>\"", "->", " ", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "\"\<bid\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<rank\>\"", "->", "#2"}]}], "|>"}], "&"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Values", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", 
            RowBox[{"(", " ", 
             RowBox[{"hand", " ", "\[Function]", " ", 
              RowBox[{"convertHandToValueWithJoker", "[", 
               RowBox[{"hand", "[", "\"\<card\>\"", "]"}], "]"}]}], ")"}]}], 
           "]"}], "&"}], " ", "/@", " ", "handsGroupExampleWithJoker"}], " ", 
        "]"}], "//", "Flatten"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "handExample", "]"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.910957623596573*^9, 3.9109576501656113`*^9}, {
  3.910958830329867*^9, 3.910958831164904*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"ec7c90ec-b7d3-43c8-bc6b-8b27cf982b4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"32T3K\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "765"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KK677\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "28"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"T55J5\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "684"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"QQQJA\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "483"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "4"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"card\"\>", "\[Rule]", "\<\"KTJJT\"\>"}], ",", 
     RowBox[{"\<\"bid\"\>", "\[Rule]", "220"}], ",", 
     RowBox[{"\<\"rank\"\>", "\[Rule]", "5"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9109587604528723`*^9, 3.910958839499731*^9, 3.910958938908828*^9, 
   3.910959049685091*^9, 3.910968259176242*^9, 3.910968660791245*^9, {
   3.910968752038167*^9, 3.9109687897529078`*^9}},
 CellLabel->
  "Out[210]=",ExpressionUUID->"51226941-0eab-47b9-aed2-b03cfda7e1a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<rank\>\"", "]"}], "*", " ", 
     RowBox[{"#", "[", "\"\<bid\>\"", "]"}]}], "&"}], " ", "/@", " ", 
   "handsWithRankExample"}], " ", "//", " ", "Total"}]], "Input",
 CellChangeTimes->{{3.9109313902218246`*^9, 3.9109313909762907`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"05bcc008-acd0-4c0b-95ac-7800aec5721e"],

Cell[BoxData["6440"], "Output",
 CellChangeTimes->{{3.91093139150495*^9, 3.910931419473486*^9}, 
   3.91093178068579*^9, 3.9109325394954033`*^9, 3.910932611580964*^9, 
   3.910932998484662*^9, {3.910933032011297*^9, 3.9109330711582623`*^9}, {
   3.910956512648081*^9, 3.9109565405237303`*^9}, 3.9109566694894876`*^9, 
   3.9109587605331373`*^9, 3.91095893903189*^9, 3.910959049820903*^9, 
   3.910968259209283*^9, 3.910968660831324*^9, {3.910968752157011*^9, 
   3.910968789867077*^9}},
 CellLabel->
  "Out[211]=",ExpressionUUID->"63f39549-666e-46fa-8d63-3504a44fe9b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<rank\>\"", "]"}], "*", " ", 
     RowBox[{"#", "[", "\"\<bid\>\"", "]"}]}], "&"}], " ", "/@", " ", 
   "handsWithRankExampleWithJoker"}], " ", "//", " ", "Total"}]], "Input",
 CellChangeTimes->{{3.910958855742013*^9, 3.910958856856472*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"a8830a3a-1825-4e4c-9dd9-297c77a34a48"],

Cell[BoxData["5905"], "Output",
 CellChangeTimes->{
  3.910958857417222*^9, 3.910958939166154*^9, 3.910959049962016*^9, 
   3.910968259241077*^9, 3.9109686608647213`*^9, {3.9109687522103777`*^9, 
   3.910968789988311*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"ac0344f4-2e40-4fd5-8ab9-9b73337ff352"]
}, Open  ]]
}, Open  ]]
},
RulerUnits->"Inches",
WindowSize->{1020, 536.25},
WindowMargins->{{0, Automatic}, {Automatic, 19.5}},
PrintingOptions->{"PrintCellBrackets"->True,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{54, 54}, {72, 72}}},
FrontEndVersion->"13.3 for Linux x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b64b01f4-3417-41cf-9123-4bbe9c4bddb1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 12294, 171, 34, "Input",ExpressionUUID->"81ed5eb8-4d72-4c3a-b9a1-64fb14d9a605"],
Cell[12855, 193, 1080, 28, 53, "Input",ExpressionUUID->"0cd907aa-359c-4001-acd5-6d2c8b24a1f5"],
Cell[CellGroupData[{
Cell[13960, 225, 266, 5, 29, "Input",ExpressionUUID->"67fc6436-edc2-4e8e-b7c6-2c64e85681ad"],
Cell[14229, 232, 1706, 37, 50, "Output",ExpressionUUID->"ee14045d-9b66-46f7-b749-b9f5f299553f"]
}, Open  ]],
Cell[15950, 272, 80860, 1329, 377, "Text",ExpressionUUID->"c2135ccd-0e31-40c1-8b2f-9081f73c6aed"],
Cell[96813, 1603, 4549, 117, 298, "Input",ExpressionUUID->"7ac3745e-bda5-43c7-bf73-98c747fa2d58"],
Cell[101365, 1722, 955, 20, 32, "Input",ExpressionUUID->"57fd30a1-2e90-476e-ac54-6022ead23450"],
Cell[CellGroupData[{
Cell[102345, 1746, 362, 6, 29, "Input",ExpressionUUID->"120fb7e4-e5ed-4db5-9c3a-971a7f61bc19"],
Cell[102710, 1754, 950, 16, 33, "Output",ExpressionUUID->"00058805-319f-4460-aa5e-1a933c708032"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103697, 1775, 1023, 24, 53, "Input",ExpressionUUID->"e002fbbc-75f8-406d-8550-62567e23a009"],
Cell[104723, 1801, 2225, 44, 87, "Output",ExpressionUUID->"13fb6203-6bf6-4bb5-9a1c-c75714705512"]
}, Open  ]],
Cell[106963, 1848, 176, 3, 35, "Text",ExpressionUUID->"fc18a114-d20a-497c-ae36-2344ef7b01f5"],
Cell[107142, 1853, 237, 6, 35, "Text",ExpressionUUID->"68589c8d-5ec1-41cc-b1a2-0ac3a2cf66fe"],
Cell[107382, 1861, 27531, 455, 82, "Text",ExpressionUUID->"d5552292-31b2-43b5-af78-bc16a01bfb84"],
Cell[134916, 2318, 698, 12, 81, "Text",ExpressionUUID->"b22c071f-5287-4edc-891d-bd789ee6216c"],
Cell[135617, 2332, 59694, 984, 215, "Text",ExpressionUUID->"2a24f95f-39ad-4f72-bf36-e6bf96cfcdc8"],
Cell[195314, 3318, 577, 10, 58, "Text",ExpressionUUID->"2b2e0dcc-1e16-4408-83f9-f4520c2c077d"],
Cell[195894, 3330, 2592, 60, 185, "Input",ExpressionUUID->"4443465c-b7ff-4a4c-be4f-62d244c0ab13"],
Cell[CellGroupData[{
Cell[198511, 3394, 720, 16, 32, "Input",ExpressionUUID->"a1c7bad6-2943-44bc-bfc7-cead342bdccd"],
Cell[199234, 3412, 7433, 178, 206, "Output",ExpressionUUID->"ef526e05-2964-4c08-bb36-d45936bccb2b"]
}, Open  ]],
Cell[206682, 3593, 148, 3, 35, "Text",ExpressionUUID->"c927f190-66ba-489a-8d55-384088905328"],
Cell[206833, 3598, 662, 10, 29, "Input",ExpressionUUID->"0bc278e1-09a5-440b-bba9-86f122f8664c"],
Cell[CellGroupData[{
Cell[207520, 3612, 1431, 36, 55, "Input",ExpressionUUID->"82077c82-c61a-4935-a5ef-8cf6eade5dc1"],
Cell[208954, 3650, 6088, 126, 159, "Output",ExpressionUUID->"48b57b6d-2155-4813-a15f-10507497402e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215079, 3781, 395, 10, 29, "Input",ExpressionUUID->"75c3c041-bc6e-4c55-b843-6f82464d3911"],
Cell[215477, 3793, 758, 12, 33, "Output",ExpressionUUID->"cdadc00c-bf6c-46d4-b6a4-8768e9e6df16"]
}, Open  ]],
Cell[216250, 3808, 246, 6, 35, "Text",ExpressionUUID->"c4c1f370-1a4a-444e-b830-22c8e86db0dd"],
Cell[216499, 3816, 781, 13, 81, "Text",ExpressionUUID->"887ab461-9ff5-4d0f-9803-2862d6576549"],
Cell[217283, 3831, 2416, 57, 185, "Input",ExpressionUUID->"ebd5b07d-bcf4-40cf-b11d-f38c27f19bb3"],
Cell[CellGroupData[{
Cell[219724, 3892, 1164, 32, 55, "Input",ExpressionUUID->"bf2171f7-0bfb-474f-8c61-20064467f7e6"],
Cell[220891, 3926, 5873, 124, 159, "Output",ExpressionUUID->"9c3eefb5-aadc-4866-8018-6567b209491b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226801, 4055, 329, 9, 29, "Input",ExpressionUUID->"8f092943-10ee-41c7-a1f9-1eb94bbe19bc"],
Cell[227133, 4066, 460, 8, 33, "Output",ExpressionUUID->"89fefb96-6ea7-4ea9-b673-a9e8481b57d1"]
}, Open  ]],
Cell[227608, 4077, 153, 3, 35, "Text",ExpressionUUID->"6301a8ca-02c6-4d1b-8994-b863f8e23b62"],
Cell[227764, 4082, 367, 8, 35, "Text",ExpressionUUID->"b9969768-7185-4f7c-b760-433c1ae60a7c"],
Cell[CellGroupData[{
Cell[228156, 4094, 154, 3, 67, "Section",ExpressionUUID->"51795d14-99c0-4308-92da-f4ba1a8fb878"],
Cell[228313, 4099, 810, 15, 150, "Text",ExpressionUUID->"4ffcd8d2-ca20-4af4-b9b0-9c62b9750e78"],
Cell[229126, 4116, 27385, 453, 206, "Text",ExpressionUUID->"1061610a-276a-445b-a838-8d37f9a7dd76"],
Cell[256514, 4571, 2543, 40, 403, "Text",ExpressionUUID->"09bfc543-ec81-4710-b6ea-74438134b225"],
Cell[259060, 4613, 177, 3, 29, "Input",ExpressionUUID->"aa584707-0b8c-4675-a6e4-26b3b70079c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259274, 4621, 151, 3, 67, "Section",ExpressionUUID->"ea79663e-cd09-4566-b83f-44841d6132b3"],
Cell[259428, 4626, 61799, 1017, 212, "Text",ExpressionUUID->"d3b3a8d5-a212-4cb1-9f2b-8c00c9601fb0"],
Cell[321230, 5645, 821, 15, 104, "Text",ExpressionUUID->"cb64e881-a12d-4b41-80ce-326cd1376a7e"],
Cell[322054, 5662, 544, 11, 104, "Text",ExpressionUUID->"38c73316-81dd-4b72-8f44-b9eb221c3586"],
Cell[322601, 5675, 19150, 459, 472, "Input",ExpressionUUID->"222f3530-275c-4322-8d67-985a4666deae"],
Cell[341754, 6136, 755, 18, 32, "Input",ExpressionUUID->"8f1b9893-eea4-4bf5-a2ef-3ded44feef30"],
Cell[342512, 6156, 2382, 58, 188, "Input",ExpressionUUID->"630d0414-3227-425b-861b-9b34c4ef6530"],
Cell[CellGroupData[{
Cell[344919, 6218, 1251, 33, 78, "Input",ExpressionUUID->"37521150-c975-485d-ba6c-131b98be02a7"],
Cell[346173, 6253, 5808, 122, 178, "Output",ExpressionUUID->"da4944da-ab4e-477f-8e61-1aca801d87c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352018, 6380, 372, 10, 29, "Input",ExpressionUUID->"5c15c61a-0ab3-47e9-85a5-ff06d21e9669"],
Cell[352393, 6392, 357, 6, 33, "Output",ExpressionUUID->"1b636423-be19-4d7a-8286-d70a55fe7a13"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[352799, 6404, 155, 3, 72, "Section",ExpressionUUID->"72535688-3b1c-48bb-acb7-b0184f030bc4"],
Cell[CellGroupData[{
Cell[352979, 6411, 249, 5, 29, "Input",ExpressionUUID->"3f7d2ea5-afcb-4c34-8301-a335b50bca0c"],
Cell[353231, 6418, 296, 5, 33, "Output",ExpressionUUID->"ff5d9343-28f1-44cc-ac01-7cad067edf19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353564, 6428, 1241, 26, 32, "Input",ExpressionUUID->"3d5fd518-9c5e-4928-b058-228e61219022"],
Cell[354808, 6456, 527, 11, 33, "Output",ExpressionUUID->"592c959a-764e-4d02-b324-2cc6883b8d20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355372, 6472, 506, 13, 32, "Input",ExpressionUUID->"8b3cdace-62d4-44c7-b2a1-8d44d711cdac"],
Cell[355881, 6487, 425, 7, 33, "Output",ExpressionUUID->"b568ff67-7286-49c7-9788-c782eeb75a9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356343, 6499, 316, 8, 29, "Input",ExpressionUUID->"e481c73d-ffc6-4692-ab8c-bc26c1bd7119"],
Cell[356662, 6509, 583, 12, 33, "Output",ExpressionUUID->"7a9a7e89-6440-4a8a-ade9-36fb391462e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357282, 6526, 463, 11, 29, "Input",ExpressionUUID->"72ff94e0-500f-4d97-941f-20da96c29fe7"],
Cell[357748, 6539, 475, 9, 33, "Output",ExpressionUUID->"796ba625-4a54-4055-b884-c1153a74c56f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358260, 6553, 209, 4, 29, "Input",ExpressionUUID->"b8f6fb0c-dd63-48b8-b8c0-b06f663cac1e"],
Cell[358472, 6559, 426, 7, 33, "Output",ExpressionUUID->"a2b3114c-a7a0-4fe4-b0f8-87d7462247e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358935, 6571, 308, 8, 29, "Input",ExpressionUUID->"709be6d4-dc12-43af-b104-70d6aad7fb7c"],
Cell[359246, 6581, 454, 8, 33, "Output",ExpressionUUID->"31d3eaec-9181-423f-98e1-432bb8151cc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359737, 6594, 297, 6, 29, "Input",ExpressionUUID->"80124444-526c-4131-9b78-ff04d0016c76"],
Cell[360037, 6602, 419, 7, 33, "Output",ExpressionUUID->"7925c9e6-351c-4da1-b455-2e12a925fe09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360493, 6614, 482, 11, 29, "Input",ExpressionUUID->"0ffcacaf-8fe6-480e-abaf-749c50058069"],
Cell[360978, 6627, 871, 17, 28, "Message",ExpressionUUID->"df4bf890-19a8-42ef-b8ec-e05024f05592"],
Cell[361852, 6646, 425, 7, 33, "Output",ExpressionUUID->"2fd1d0d2-e227-4936-a7e0-975a8940e5ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362314, 6658, 500, 12, 29, "Input",ExpressionUUID->"d30d353a-a476-48aa-ae3e-b49b68fdf311"],
Cell[362817, 6672, 761, 13, 33, "Output",ExpressionUUID->"085ae257-da13-47f2-9540-c11f9a9b62c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363615, 6690, 416, 10, 29, "Input",ExpressionUUID->"84f6a214-d2b5-4b78-9476-11c43d51d6c9"],
Cell[364034, 6702, 476, 10, 33, "Output",ExpressionUUID->"3f10573c-6ecd-446b-8bcf-b44907c8ad29"]
}, Open  ]],
Cell[364525, 6715, 173, 3, 29, "Input",ExpressionUUID->"a419ef79-9754-4b82-92ff-2ad93d292318"],
Cell[364701, 6720, 303, 8, 114, "Input",ExpressionUUID->"9e889c79-01d9-47d5-b1ab-964b1236357b"],
Cell[CellGroupData[{
Cell[365029, 6732, 964, 25, 76, "Input",ExpressionUUID->"52afccf6-28c9-45ba-8044-d61ab0033b9f"],
Cell[365996, 6759, 1700, 37, 59, "Output",ExpressionUUID->"5aa846f9-50ec-44b3-a880-e826e799e2ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367733, 6801, 606, 13, 32, "Input",ExpressionUUID->"183ed227-a978-4079-b092-e24cee73d20b"],
Cell[368342, 6816, 2073, 48, 59, "Output",ExpressionUUID->"93be01f8-458c-4992-9508-f06b07bf4240"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370452, 6869, 470, 11, 32, "Input",ExpressionUUID->"cecff614-5da8-4c13-a3ed-ea11c26fcfa3"],
Cell[370925, 6882, 1613, 41, 59, "Output",ExpressionUUID->"a525be7e-7b34-443b-aa44-ffe81ad67105"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372575, 6928, 1326, 34, 78, "Input",ExpressionUUID->"ff94d7b9-7d0d-4901-8d1e-ec6f91cd8088"],
Cell[373904, 6964, 1823, 37, 59, "Output",ExpressionUUID->"1f4e7295-1c40-491b-8b2a-b9b70db0b5f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375764, 7006, 1329, 34, 78, "Input",ExpressionUUID->"ec7c90ec-b7d3-43c8-bc6b-8b27cf982b4c"],
Cell[377096, 7042, 1581, 34, 59, "Output",ExpressionUUID->"51226941-0eab-47b9-aed2-b03cfda7e1a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378714, 7081, 406, 10, 29, "Input",ExpressionUUID->"05bcc008-acd0-4c0b-95ac-7800aec5721e"],
Cell[379123, 7093, 569, 9, 33, "Output",ExpressionUUID->"63f39549-666e-46fa-8d63-3504a44fe9b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379729, 7107, 411, 10, 29, "Input",ExpressionUUID->"a8830a3a-1825-4e4c-9dd9-297c77a34a48"],
Cell[380143, 7119, 305, 6, 33, "Output",ExpressionUUID->"ac0344f4-2e40-4fd5-8ab9-9b73337ff352"]
}, Open  ]]
}, Open  ]]
}
]
*)

